{"version":3,"sources":["worklets/adsr-processor.worklet.ts","worklets/and-gate-processor.worklet.ts","worklets/comparator-processor.worklet.ts","worklets/envelope-follower.worklet.ts","worklets/gate-processor.worklet.ts","worklets/meter-processor.worklet.ts","worklets/noise-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/quantizer-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/sample-and-hold-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","worklets/aubio-processor.worklet.ts","hooks/state/useAudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/FlowContextMenu.tsx","utils/handles.ts","hooks/state/useNodeStore.tsx","utils/storage.ts","hooks/state/useProject.tsx","utils/defaultProject.ts","components/Node.tsx","hooks/nodes/useAudioWorkletNode.tsx","worklets/adsr-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","hooks/useImmediateUpdateEffect.ts","hooks/nodes/useAnalyserNode.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","hooks/nodes/useBiquadFilterNode.tsx","components/nodes/BiquadFilter.tsx","hooks/nodes/useChannelMergerNode.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","hooks/nodes/useChannelSplitterNode.tsx","components/nodes/ChannelSplitter.tsx","hooks/nodes/useWaveShaperNode.tsx","components/nodes/Clipper.tsx","components/nodes/Comparator.tsx","hooks/nodes/useConstantSourceNode.tsx","components/nodes/ConstantSource.tsx","hooks/nodes/useDelayNode.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","hooks/nodes/useGainNode.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","hooks/nodes/useDestinationNode.tsx","components/nodes/Destination.tsx","hooks/nodes/useDynamicsCompressorNode.tsx","components/nodes/DynamicsCompressor.tsx","worklets/envelope-follower.types.ts","components/nodes/EnvelopeFollower.tsx","components/nodes/Equalizer.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/Note.tsx","components/nodes/Keyboard.tsx","components/nodes/Meter.tsx","utils/scale.ts","components/nodes/Metronome.tsx","worklets/noise-processor.types.ts","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","hooks/nodes/useOscillatorNode.tsx","components/nodes/Oscillator.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","components/nodes/Quantizer.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","worklets/aubio-processor.types.ts","components/nodes/Aubio.tsx","utils/getMedia.js","components/nodes/AudioDeviceSource.tsx","worklets/sample-and-hold-processor.types.ts","components/nodes/SampleAndHold.tsx","components/nodes/Sign.tsx","hooks/nodes/useStereoPannerNode.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","utils/collections.ts","utils/functions.ts","hooks/useKeyPress.ts","components/controls/NumericStepper.tsx","components/nodes/Vocoder/BandStrip.tsx","components/nodes/Vocoder/Vocoder.tsx","components/nodes/WaveShaper.tsx","components/nodes/Wled.tsx","components/nodes/XorGate.tsx","components/nodes/XYPad.tsx","components/nodes/RawGain.tsx","components/Flow.tsx","logo.svg","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useAudioContext","create","audioContext","AudioContext","Audio","children","useState","ready","setReady","useEffect","awaitAudioWorkletProcessors","context","a","audioWorklet","Promise","all","addModule","ADSRWorkletProcessor","AndGateWorkletProcessor","ComparatorWorkletProcessor","EnvelopeFollowerWorkletProcessor","GateWorkletProcessor","MeterWorkletProcessor","NoiseWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","QuantizerWorkletProcessor","RectifierWorkletProcessor","SampleAndHoldWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","AubioWorkletProcessor","resume","useCallback","state","onClick","ContextMenuContext","createContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","useMemo","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","Provider","value","ref","node","style","popper","items","label","FlowContextMenu","addNode","className","map","item","subitem","memo","getChannelIndex","handle","match","resolveConnection","connection","getNode","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","isComplexAudioNode","output","input","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","disconnect","nodeCleanup","stop","AudioWorkletNode","port","postMessage","useNodeStore","set","get","nodes","id","removeNode","Object","fromEntries","entries","filter","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","edge","forEach","storage","getItem","name","setItem","removeItem","del","defaultProject","uuidv4","elements","transform","x","y","zoom","useProject","persist","data","setElements","addElement","element","setId","setTransform","clear","onChangeElementFactory","isNode","getStorage","Node","inputs","outputs","title","type","props","contextMenu","find","handleStyle","background","substr","cloneNode","onChange","position","GRID_SIZE","onContextMenu","event","preventDefault","clientY","clientX","Position","Left","Right","useAudioWorkletNode","Mode","Parameters","Stage","options","processorOptions","ADSR","selected","attackTime","decayTime","mode","Linear","releaseTime","sustainLevel","sustainOn","workletNode","AttackTime","parameters","DecayTime","ReleaseTime","SustainLevel","Exponential","Logarithmic","checked","min","step","max","useAnimationFrame","callback","active","cb","lastTickMs","requestId","updateLastTick","Date","now","requestFrame","requestAnimationFrame","tick","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","borderRadius","marginBottom","useImmediateUpdateEffect","effect","deps","tearDown","useWillUnmount","effectResult","Function","useAnalyserNode","fftSizeExp","createAnalyser","fftSize","Math","pow","Analyser","nodeType","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","kind","getAsFile","onDragOver","onDrop","useBiquadFilterNode","detune","frequency","gain","Q","createBiquadFilter","filtersUsingGain","filtersUsingQ","BiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","includes","canUseQ","disabled","useChannelMergerNode","createChannelMerger","channelCounts","ChannelMerger","Array","fill","channel","alignItems","flexDirection","keys","channelCount","useChannelSplitterNode","createChannelSplitter","ChannelSplitter","numberOfOutputs","useWaveShaperNode","curve","oversample","createWaveShaper","Clipper","Comparator","useConstantSourceNode","offset","createConstantSource","ConstantSource","useDelayNode","delayTime","maxDelayTime","createDelay","clampDelayTime","Delay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","useGainNode","instant","setTargetAtTime","currentTime","dbToFloat32","float32toDb","abs","DelayEffect","feedback","mix","inputNode","outputNode","dryNode","cos","PI","wetNode","delayNode","feedbackNode","toFixed","useDestinationNode","destination","Destination","devices","setDevices","navigator","mediaDevices","enumerateDevices","then","dev","d","catch","err","log","message","useDynamicsCompressorNode","attack","knee","ratio","release","threshold","createDynamicsCompressor","DynamicsCompressor","ParameterDefaults","EnvelopeFollower","workletId","BANDS_OCTAVES","FILTER_BANDS","FILTER_GAINS","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filterNodes","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","inputANode","inputBNode","toggleInput","A","B","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","Note","detailed","split","accidental","frequencyDetuned","keysOptions","Keyboard","gateNode","frequencyNode","setNote","noteFrequency","playNote","stopNote","gate","key","onMouseLeave","keyIndex","keyTwelfth","keyOctave","keyClassName","onMouseEnter","DPI_RATIO","window","devicePixelRatio","drawMeter","levels","font","textBaseline","save","clearRect","restore","MAX_LEVEL","significant","rulerHeight","rulerWidth","levelText","groupY","lineX","WIDTH","textY","fillText","groupX","level","levelIndex","t","decibels","hue","lightness","Meter","levelsRef","channels","setChannels","canvasWidth","handleMessage","payload","onmessage","slice","BUCKETS","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","Noise","White","Pink","Brown","NotGate","OrGate","useOscillatorNode","createOscillator","Oscillator","OscillatorNote","OutputSwitch","outputANode","outputBNode","toggleOutput","Rectifier","HalfWave","FullWave","Aubio","OnSet","Bpm","Pitch","getMedia","clientDevice","getUserMedia","audio","deviceId","exact","video","AudioDeviceSource","s","setClientDevice","setLabel","stream","createMediaStreamSource","getTracks","track","close","location","reload","SampleAndHold","HoldTime","Sign","useStereoPannerNode","pan","createStereoPanner","StereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","generate","generateZip","generator","b","noop","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","addEventListener","removeEventListener","NumericStepper","largeStep","standardStep","smallStep","isLargeStep","isSmallStep","roundToFixed","num","round","BandStrip","filterDesc","bandStyle","onGainChange","onQChange","gainHandler","valueAsNumber","hz","freqColor","gainDb","q","FFT_SIZE_EXP","log2","BIN_COUNT","FFT_SIZE","MAX_HZ","Vocoder","modInputNode","modAnalyser","carrierInputNode","modConfig","setModConfig","setPaused","modFilterBank","gainNode","envelopeFollower","parameterData","responsesByBand","Map","freqs","from","bandResponse","magResponse","phaseResponse","gainAdjustedMagResponse","mag","carrierFilterBank","filter1","filter2","analyser","acc","carrier","modulation","freqResponseCanvasRef","bandResponses","toLog","minLog","maxLog","getX","hzLog","responseUnitHeight","bandHz","responseColor","BAND_COLORS","alpha","rgb","string","gradient","createLinearGradient","addColorStop","lineStarted","minY","frequencyCount","carrierBandBins","carrierAnalyserCanvasRef","getFrequencyData","filtersFrequencies","freqBins","bandBins","binRangeStart","binRangeEnd","ceil","binRangeLength","hzStepPerBin","binHzStart","unclippedHeight","freqRange","subarray","drawBinsAsLine","WaveShaper","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","updateCurve","flexWrap","rows","Wled","substring","XorGate","XYPad","setLineDash","drawAxes","xNode","yNode","setXY","gateOn","gateOff","onMouseMove","rect","getXY","cursor","RawGain","nodeTypes","Quantizer","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","tryingToConnect","setTryingToConnect","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","onMoveEnd","onConnectStart","onConnectStop","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","onPaneClick","onPaneContextMenu","handleType","defaultPosition","defaultZoom","onlyRenderVisibleElements","selectNodesOnDrag","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","topbarStyles","paddingRight","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","Project","setProject","visible","setVisible","drawerStyles","transition","getDrawerStyles","hash","project","atob","JSON","parse","href","btoa","stringify","backgroundImage","logo","document","querySelectorAll","classList","toggle","__rf","marginRight","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97ad44f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"25f83a8184c7a4f4d712.worklet.js\";","module.exports = __webpack_public_path__ + \"264005fc3fbac0df3cbb.worklet.js\";","module.exports = __webpack_public_path__ + \"7dba029d86b844d8016f.worklet.js\";","module.exports = __webpack_public_path__ + \"2e77cfc056b8fa914a0f.worklet.js\";","module.exports = __webpack_public_path__ + \"4ed615d1f9dca87c6212.worklet.js\";","module.exports = __webpack_public_path__ + \"897bbdcfb2b44a667a76.worklet.js\";","module.exports = __webpack_public_path__ + \"facaf7919522ba0e40ad.worklet.js\";","module.exports = __webpack_public_path__ + \"cadd6a708e4d2b9947b3.worklet.js\";","module.exports = __webpack_public_path__ + \"8db703de13a376294788.worklet.js\";","module.exports = __webpack_public_path__ + \"f9fe33625e24ee0c7feb.worklet.js\";","module.exports = __webpack_public_path__ + \"2f4ffd4dc2da4be65819.worklet.js\";","module.exports = __webpack_public_path__ + \"3775d4dc70be610cb423.worklet.js\";","module.exports = __webpack_public_path__ + \"8576755c7f889213a206.worklet.js\";","module.exports = __webpack_public_path__ + \"fbff70cf744eb55f2ea0.worklet.js\";","module.exports = __webpack_public_path__ + \"be6edbc3442b64609e81.worklet.js\";","module.exports = __webpack_public_path__ + \"d485a6ece3af9a2d200c.worklet.js\";","// import * as sac from \"standardized-audio-context\";\nimport create from \"zustand\";\nimport { AudioContext } from \"utils/audioContext\";\n\ntype AudioContextStore = {\n  audioContext: AudioContext;\n};\n\nexport const useAudioContext = create<AudioContextStore>(() => ({\n  audioContext: new AudioContext(),\n}));\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useAudioContext } from \"hooks/state/useAudioContext\";\nimport { AudioContext } from \"utils/audioContext\";\n\nimport ADSRWorkletProcessor from \"worklet-loader!worklets/adsr-processor.worklet.ts\";\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport ComparatorWorkletProcessor from \"worklet-loader!worklets/comparator-processor.worklet.ts\";\nimport EnvelopeFollowerWorkletProcessor from \"worklet-loader!worklets/envelope-follower.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport MeterWorkletProcessor from \"worklet-loader!worklets/meter-processor.worklet.ts\";\nimport NoiseWorkletProcessor from \"worklet-loader!worklets/noise-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport QuantizerWorkletProcessor from \"worklet-loader!worklets/quantizer-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport SampleAndHoldWorkletProcessor from \"worklet-loader!worklets/sample-and-hold-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\nimport AubioWorkletProcessor from \"worklet-loader!worklets/aubio-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n  const { audioContext } = useAudioContext();\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      if (!context.audioWorklet) {\n        return;\n      }\n\n      await Promise.all([\n        context.audioWorklet.addModule(ADSRWorkletProcessor),\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(ComparatorWorkletProcessor),\n        context.audioWorklet.addModule(EnvelopeFollowerWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(MeterWorkletProcessor),\n        context.audioWorklet.addModule(NoiseWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(QuantizerWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SampleAndHoldWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n        context.audioWorklet.addModule(AubioWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (audioContext) {\n      awaitAudioWorkletProcessors(audioContext);\n    }\n  }, [audioContext]);\n\n  const resume = useCallback(() => {\n    if (audioContext?.state === \"suspended\") {\n      audioContext.resume();\n    }\n  }, [audioContext]);\n\n  if (!audioContext) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return <div onClick={resume}>{children}</div>;\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, {\n    placement: \"bottom-start\",\n  });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 } as DOMRect;\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div\n        ref={node => node && setPopperElement(node)}\n        style={styles.popper}\n        {...attributes.popper}\n      >\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nconst items = [\n  {\n    items: [\n      { label: \"Audio Buffer Source\", node: \"AudioBufferSource\" },\n      { label: \"Audio Device\", node: \"AudioDeviceSource\" },\n      { label: \"Gate\", node: \"Gate\" },\n      { label: \"Keyboard\", node: \"Keyboard\" },\n      { label: \"Metronome\", node: \"Metronome\" },\n      { label: \"Noise\", node: \"Noise\" },\n      { label: \"Oscillator\", node: \"Oscillator\" },\n      { label: \"Oscillator Note\", node: \"OscillatorNote\" },\n    ],\n    label: \"Sources\",\n  },\n  {\n    items: [\n      { label: \"AudioDevice\", node: \"Destination\" },\n      { label: \"WLED\", node: \"Wled\" },\n    ],\n    label: \"Destinations\",\n  },\n  {\n    items: [\n      { label: \"Biquad Filter\", node: \"BiquadFilter\" },\n      { label: \"Channel Merger\", node: \"ChannelMerger\" },\n      { label: \"Channel Splitter\", node: \"ChannelSplitter\" },\n      { label: \"Clipper\", node: \"Clipper\" },\n      { label: \"Delay\", node: \"Delay\" },\n      { label: \"Delay Effect\", node: \"DelayEffect\" },\n      { label: \"Dynamics Compressor\", node: \"DynamicsCompressor\" },\n      { label: \"Equalizer\", node: \"Equalizer\" },\n      { label: \"Gain\", node: \"Gain\" },\n      { label: \"Quantizer\", node: \"Quantizer\" },\n      { label: \"Raw Gain\", node: \"RawGain\" },\n      { label: \"Rectifier\", node: \"Rectifier\" },\n      { label: \"Sample and Hold\", node: \"SampleAndHold\" },\n      { label: \"Sign\", node: \"Sign\" },\n      { label: \"Stereo Panner\", node: \"StereoPanner\" },\n      { label: \"Transformer\", node: \"Transformer\" },\n      { label: \"Vocoder\", node: \"Vocoder\" },\n      { label: \"Wave Shaper\", node: \"WaveShaper\" },\n    ],\n    label: \"Effects\",\n  },\n  {\n    items: [\n      { label: \"ADSR\", node: \"ADSR\" },\n      { label: \"Constant Source\", node: \"ConstantSource\" },\n      { label: \"Envelope Follower\", node: \"EnvelopeFollower\" },\n      { label: \"Input Switch\", node: \"InputSwitch\" },\n      { label: \"Output Switch\", node: \"OutputSwitch\" },\n      { label: \"XY Pad\", node: \"XYPad\" },\n    ],\n    label: \"Controllers\",\n  },\n  {\n    items: [\n      { label: \"AND Gate\", node: \"AndGate\" },\n      { label: \"Comparator\", node: \"Comparator\" },\n      { label: \"NOT Gate\", node: \"NotGate\" },\n      { label: \"OR Gate\", node: \"OrGate\" },\n      { label: \"XOR Gate\", node: \"XorGate\" },\n    ],\n    label: \"Logic\",\n  },\n  {\n    items: [\n      { label: \"Analyser\", node: \"Analyser\" },\n      { label: \"Meter\", node: \"Meter\" },\n      { label: \"Aubio\", node: \"Aubio\" },\n    ],\n    label: \"Analysers\",\n  },\n];\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      {items.map(item => (\n        <li key={item.label}>\n          {item.label}\n          <span>&#x276F;</span>\n          {item.items && (\n            <ul className=\"contextMenu sub\">\n              {item.items.map(subitem => (\n                <li key={subitem.label} onClick={() => addNode(subitem.node)}>\n                  {subitem.label}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeStore } from \"hooks/state/useNodeStore\";\nimport { nodeCleanup } from \"hooks/state/useNodeStore\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (\n    !connection.source ||\n    !connection.target ||\n    !connection.sourceHandle ||\n    !connection.targetHandle\n  ) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeStore();\n\n  return useCallback(\n    (connection: Edge | Connection) => connectNodes(connection, getNode),\n    [getNode]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeStore();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeStore();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { DependencyList, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { AudioContext, AudioNode } from \"utils/audioContext\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { useAudioContext } from \"hooks/state/useAudioContext\";\nimport create from \"zustand\";\n\nexport type ComplexAudioNode<\n  Input extends AudioNode | undefined,\n  Output extends AudioNode | undefined\n> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<\n  Input extends AudioNode | undefined,\n  Output extends AudioNode | undefined\n> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(\n  node: AnyAudioNode\n): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n\n    if (node instanceof AudioWorkletNode!) {\n      node.port.postMessage(\"stop\");\n    }\n  }\n}\n\nexport const useNodeStore = create<NodeContextType>((set, get) => ({\n  nodes: {},\n  addNode: (id, node) => {\n    set(state => ({\n      ...state,\n      nodes: {\n        ...state.nodes,\n        [id]: node,\n      },\n    }));\n  },\n  getNode: id => get().nodes[id],\n  removeNode: id => {\n    nodeCleanup(get().nodes[id]);\n    set(state => ({\n      nodes: Object.fromEntries(Object.entries(state.nodes).filter(([key]) => key === id)),\n    }));\n  },\n}));\n\nexport function useNode<T extends AudioNode>(\n  id: string,\n  nodeFactory: NodeFactory<T>,\n  dependencies?: DependencyList\n): T;\n\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\n\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const { audioContext } = useAudioContext();\n  const { addNode, getNode, removeNode } = useNodeStore();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(audioContext), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { get, set, del } from \"idb-keyval\"; // can use anything: IndexedDB, Ionic Storage, etc.\nimport { StateStorage } from \"zustand/middleware\";\n\nexport const storage: StateStorage = {\n  getItem: async (name: string): Promise<string | null> => {\n    return (await get(name)) || null;\n  },\n  setItem: async (name: string, value: string): Promise<void> => {\n    await set(name, value);\n  },\n  removeItem: async (name: string): Promise<void> => {\n    await del(name);\n  },\n};\n","import { getDefaultProject } from \"utils/defaultProject\";\nimport create from \"zustand\";\nimport { ElementId, Elements, FlowElement, FlowTransform, isNode } from \"react-flow-renderer\";\nimport { ProjectStateData } from \"types/Project\";\nimport { persist } from \"zustand/middleware\";\nimport { storage } from \"utils/storage\";\n\nexport type ProjectState = ProjectStateData & {\n  set: (data: ProjectStateData) => void;\n  setElements: (elements: Elements) => void;\n  addElement: (element: FlowElement) => void;\n  setId: (ElementId: string) => void;\n  setTransform: (transform: FlowTransform) => void;\n  clear: () => void;\n  onChangeElementFactory: (id: ElementId) => (data: Record<string, any>) => void;\n};\n\nconst defaultProject = getDefaultProject();\n\nexport const useProject = create<ProjectState>(\n  persist(\n    (set, get) => ({\n      elements: defaultProject.elements,\n      id: defaultProject.id,\n      transform: defaultProject.transform,\n      set: data => void set(state => ({ ...state, ...data })),\n      setElements: elements => {\n        set(state => ({ ...state, elements }));\n      },\n      addElement: element =>\n        set(state => ({\n          ...state,\n          elements: [...state.elements, element],\n        })),\n      setId: id => set(state => ({ ...state, id })),\n      setTransform: transform =>\n        set(state => ({\n          ...state,\n          transform,\n        })),\n      clear: () => {\n        set(state => ({ ...state, ...defaultProject }));\n      },\n      onChangeElementFactory: (id: string) => (data: Record<string, any>) => {\n        get().setElements(\n          get().elements.map(element => {\n            if (isNode(element) && element.id === id) {\n              return { ...element, data: { ...element.data, ...data } };\n            }\n            return element;\n          })\n        );\n      },\n    }),\n    {\n      name: \"project-storage\", // unique name\n      getStorage: () => storage,\n    }\n  )\n);\n","import { ProjectStateData } from \"types/Project\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const getDefaultProject = (): ProjectStateData => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n","import React, { useCallback, useMemo } from \"react\";\nimport { Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"hooks/state/useProject\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, addElement } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n\n  const handleStyle = useMemo(\n    () => ({\n      // background: '#0dbedc',\n      background: `#0dbed${id.substr(-1)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    addElement({\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    });\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, addElement, type]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({\n        width: 0,\n        height: 0,\n        top: event.clientY,\n        right: 0,\n        bottom: 0,\n        left: event.clientX,\n      } as DOMRect);\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div\n      className=\"customNode\"\n      onClick={() => contextMenu.hide()}\n      onContextMenu={onContextMenu}\n      {...props}\n    >\n      <div title={id} className=\"customNode_header\">\n        {title ?? type}\n      </div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import { DependencyList } from \"react\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport { AudioWorkletNode, IAudioWorkletNodeOptions } from \"utils/audioContext\";\n\nfunction useAudioWorkletNode(\n  id: string,\n  name: string,\n  options?: Partial<IAudioWorkletNodeOptions>,\n  dependencies?: DependencyList\n) {\n  return useNode(\n    id,\n    context => {\n      return new AudioWorkletNode!(context, name, {\n        ...options,\n        processorOptions: {\n          ...options?.processorOptions,\n          id,\n        },\n      });\n    },\n    dependencies\n  );\n}\n\nexport default useAudioWorkletNode;\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { AudioContext, AudioWorkletNode } from \"utils/audioContext\";\nimport { Mode, Parameters } from \"worklets/adsr-processor.types\";\n\ninterface ADSRNode extends Required<ComplexAudioNode<undefined, undefined>> {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.DecayTime]: AudioParam;\n  gain: AudioWorkletNode<AudioContext>;\n  gate: AudioWorkletNode<AudioContext>;\n  [Parameters.ReleaseTime]: AudioParam;\n  [Parameters.SustainLevel]: AudioParam;\n}\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const {\n    attackTime = 0.2,\n    decayTime = 0.1,\n    mode = Mode.Linear,\n    onChange,\n    releaseTime = 0.6,\n    sustainLevel = 0.7,\n    sustainOn = true,\n  } = data;\n\n  const workletNode = useAudioWorkletNode(\n    id,\n    \"adsr-processor\",\n    {\n      processorOptions: { sustainOn, mode },\n    },\n    [mode, sustainOn]\n  );\n\n  // AudioNode\n  const node = useNode(\n    id,\n    () => ({\n      [Parameters.AttackTime]: workletNode.parameters.get(Parameters.AttackTime),\n      [Parameters.DecayTime]: workletNode.parameters.get(Parameters.DecayTime),\n      gain: workletNode,\n      gate: workletNode,\n      input: undefined,\n      output: undefined,\n      [Parameters.ReleaseTime]: workletNode.parameters.get(Parameters.ReleaseTime),\n      [Parameters.SustainLevel]: workletNode.parameters.get(Parameters.SustainLevel),\n    }),\n    [mode, sustainOn]\n  ) as unknown as ADSRNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attackTime), [node, attackTime]);\n  useEffect(() => void (node[Parameters.DecayTime].value = decayTime), [node, decayTime]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = releaseTime), [node, releaseTime]);\n  useEffect(() => void (node[Parameters.SustainLevel].value = sustainLevel), [node, sustainLevel]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\n        \"gate\",\n        Parameters.AttackTime,\n        Parameters.DecayTime,\n        Parameters.ReleaseTime,\n        Parameters.SustainLevel,\n      ]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"50%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useEffect, useRef } from \"react\";\n\nexport default function useAnimationFrame(\n  callback: (elapsedMs: number) => void,\n  active: boolean\n): void {\n  const cb = useRef<(elapsedMs: number) => void>();\n\n  // TODO: This feels wrong\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    let lastTickMs: number;\n    const updateLastTick = () => {\n      lastTickMs = lastTickMs || Date.now();\n      return Date.now() - lastTickMs;\n    };\n\n    let requestId: number;\n    const requestFrame = () => (requestId = requestAnimationFrame(tick));\n\n    const tick = () => {\n      requestFrame();\n      cb.current && cb.current(updateLastTick());\n    };\n\n    if (active) {\n      updateLastTick();\n      requestFrame();\n      return () => cancelAnimationFrame(requestId);\n    }\n  }, [active]);\n}\n","import { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport React, { useCallback, useRef } from \"react\";\nimport { AnalyserNode } from \"utils/audioContext\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#000014\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#0dbedc\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#000014\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#0000c8\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    getData();\n    draw();\n  }, [draw, getData]);\n\n  useAnimationFrame(tick, !paused);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{ display: \"block\", borderRadius: 5, marginBottom: 5 }}\n      {...canvasProps}\n    />\n  );\n}\n\nexport default React.memo(Visualiser);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport useWillUnmount from \"@restart/hooks/useWillUnmount\";\nimport { DependencyList, EffectCallback, useMemo, useRef } from \"react\";\n\n/**\n * This behaves identically to @restart's useImmediateUpdateEffect, but will\n * also call its callback upon creation.\n */\nexport default function useImmediateUpdateEffect(effect: EffectCallback, deps: DependencyList) {\n  const tearDown = useRef<ReturnType<EffectCallback>>();\n\n  useWillUnmount(() => {\n    if (tearDown.current) tearDown.current();\n  });\n\n  useMemo(() => {\n    if (tearDown.current) tearDown.current();\n    const effectResult = effect();\n    tearDown.current = effectResult instanceof Function ? effectResult : undefined;\n  }, deps);\n}\n","import { useNode } from \"hooks/state/useNodeStore\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\n\ninterface Options {\n  fftSizeExp?: number;\n}\n\nfunction useAnalyserNode(id: string, { fftSizeExp = 11 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return node;\n}\n\nexport default useAnalyserNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\nimport useAnalyserNode from \"hooks/nodes/useAnalyserNode\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n  const node = useAnalyserNode(id, { fftSizeExp });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"and-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport { AudioBufferSourceNode } from \"utils/audioContext\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>▶</button>\n          <button onClick={stop}>◽</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input\n                  checked={loop}\n                  onChange={() => onChange({ loop: !loop })}\n                  title=\"Loop\"\n                  type=\"checkbox\"\n                />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import { useNode } from \"hooks/state/useNodeStore\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { TBiquadFilterType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  gain?: number;\n  Q?: number;\n  type?: TBiquadFilterType;\n}\n\nfunction useBiquadFilterNode(\n  id: string,\n  { detune = 0, frequency = 350, gain = 0, Q = 1, type = \"lowpass\" }: Options\n) {\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.detune.value = detune), [node, detune]);\n  useImmediateUpdateEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useImmediateUpdateEffect(() => void (node.gain.value = gain), [node, gain]);\n  useImmediateUpdateEffect(() => void (node.Q.value = Q), [node, Q]);\n  useImmediateUpdateEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useBiquadFilterNode;\n","import React, { useEffect, useRef } from 'react';\nimport { NodeProps } from 'react-flow-renderer';\nimport Node from 'components/Node';\nimport useBiquadFilterNode from 'hooks/nodes/useBiquadFilterNode';\nimport { BiquadFilterNode, TBiquadFilterType } from 'utils/audioContext';\n\nconst filtersUsingGain: TBiquadFilterType[] = [\n  'lowshelf',\n  'highshelf',\n  'peaking',\n];\nconst filtersUsingQ: TBiquadFilterType[] = [\n  'lowpass',\n  'highpass',\n  'bandpass',\n  'peaking',\n  'notch',\n  'allpass',\n];\n\nfunction drawFrequencyResponse(\n  context: CanvasRenderingContext2D,\n  data: Float32Array,\n  node: BiquadFilterNode\n) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = '#000014';\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = '#ffffff77';\n  context.beginPath();\n  context.moveTo(\n    (node.frequency.value / (node.context.sampleRate / 2)) * width,\n    0\n  );\n  context.lineTo(\n    (node.frequency.value / (node.context.sampleRate / 2)) * width,\n    height\n  );\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = '#0000c8';\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const {\n    detune = 0,\n    gain = 0,\n    frequency = 350,\n    Q = 1,\n    onChange,\n    type = 'lowpass',\n  } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const node = useBiquadFilterNode(id, { detune, frequency, gain, Q, type });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext('2d');\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map(\n      (_, i) => i * 100\n    );\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = filtersUsingGain.includes(type);\n  const canUseQ = filtersUsingQ.includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={['input', 'detune', 'frequency', 'gain', 'Q']}\n      outputs={['output']}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n            <input\n              type=\"number\"\n              value={frequency}\n              onChange={e => onChange({ frequency: +e.target.value })}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={['lowpass', 'highpass'].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={['lowpass', 'highpass'].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n            <input\n              type=\"number\"\n              value={Q}\n              onChange={e => onChange({ Q: +e.target.value })}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              value={type}\n            >\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","import { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  inputs?: number;\n}\n\nfunction useChannelMergerNode(id: string, { inputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n}\n\nexport default useChannelMergerNode;\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelMergerNode from \"hooks/nodes/useChannelMergerNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n  const node = useChannelMergerNode(id, { inputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  outputs?: number;\n}\n\nfunction useChannelSplitterNode(id: string, { outputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n}\n\nexport default useChannelSplitterNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelSplitterNode from \"hooks/nodes/useChannelSplitterNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n  const node = useChannelSplitterNode(id, { outputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport { TOverSampleType } from \"utils/audioContext\";\n\ninterface Options {\n  curve?: Float32Array | null;\n  oversample?: TOverSampleType;\n}\n\nfunction useWaveShaperNode(id: string, { curve = null, oversample = \"none\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createWaveShaper());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.curve = curve), [node, curve]);\n  useImmediateUpdateEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  return node;\n}\n\nexport default useWaveShaperNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\nconst curve = new Float32Array([-1, 1]);\n\nfunction Clipper({ id, type }: NodeProps) {\n  // AudioNode\n  useWaveShaperNode(id, { curve });\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type} />;\n}\n\nexport default React.memo(Clipper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Comparator({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"comparator-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Comparator\" type={type} />;\n}\n\nexport default React.memo(Comparator);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  offset?: number;\n}\n\nfunction useConstantSourceNode(id: string, { offset = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useImmediateUpdateEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.offset.value = offset), [node, offset]);\n\n  return node;\n}\n\nexport default useConstantSourceNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n  useConstantSourceNode(id, { offset });\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  delayTime?: number;\n  maxDelayTime?: number;\n}\n\nfunction useDelayNode(id: string, { delayTime = 1, maxDelayTime = 1 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(maxDelayTime), [maxDelayTime]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return node;\n}\n\nexport default useDelayNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n  const node = useDelayNode(id, { delayTime, maxDelayTime });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import { useNode } from \"hooks/state/useNodeStore\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\n\ninterface Options {\n  gain?: number;\n  instant?: boolean;\n}\n\nfunction useGainNode(id: string, { gain = 1, instant = false }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => {\n    if (instant) {\n      node.gain.value = gain;\n    } else {\n      node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n    }\n  }, [node, gain, instant]);\n\n  return node;\n}\n\nexport default useGainNode;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Mixing\n  const dryNode = useGainNode(`${id}_dry`, { gain: Math.cos(mix * 0.5 * Math.PI) });\n  const wetNode = useGainNode(`${id}_wet`, { gain: Math.cos((1.0 - mix) * 0.5 * Math.PI) });\n  // Delay\n  const delayNode = useDelayNode(`${id}_delay`, { delayTime });\n  // Feedback\n  const feedbackNode = useGainNode(`${id}_feedback`, { gain: feedback });\n\n  // Dry chain\n  useEffect(() => {\n    inputNode.connect(dryNode);\n    dryNode.connect(outputNode);\n  }, [dryNode, inputNode, outputNode]);\n  // Wet chain\n  useEffect(() => {\n    inputNode.connect(delayNode);\n    delayNode.connect(wetNode);\n    wetNode.connect(outputNode);\n  }, [delayNode, inputNode, outputNode, wetNode]);\n  // Feedback chain\n  useEffect(() => {\n    wetNode.connect(feedbackNode);\n    feedbackNode.connect(delayNode);\n  }, [delayNode, feedbackNode, wetNode]);\n\n  // AudioNode\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import { useNode } from \"hooks/state/useNodeStore\";\n\nfunction useDestinationNode(id: string) {\n  // AudioNode\n  return useNode(id, context => context.destination);\n}\n\nexport default useDestinationNode;\n","import React, { useEffect, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDestinationNode from \"hooks/nodes/useDestinationNode\";\n\nfunction Destination({ id, type, selected }: NodeProps) {\n  useDestinationNode(id);\n  const [devices, setDevices] = useState<Array<any>>([]);\n  useEffect(() => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log(\"enumerateDevices() not supported.\");\n      return;\n    }\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (dev) {\n        dev.length && setDevices(dev.filter(d => d.kind === \"audiooutput\"));\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  }, []);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} type={type} title={`Destination: Audio Device`}>\n      {selected && devices.length > 0 && (\n        <select>{devices && devices.map(d => <option>{d.label}</option>)}</select>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Destination);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  attack?: number;\n  knee?: number;\n  ratio?: number;\n  release?: number;\n  threshold?: number;\n}\n\nfunction useDynamicsCompressorNode(\n  id: string,\n  { attack = 0.003, knee = 30, ratio = 12, release = 0.25, threshold = -24 }: Options\n) {\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useImmediateUpdateEffect(() => void (node.knee.value = knee), [node, knee]);\n  useImmediateUpdateEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useImmediateUpdateEffect(() => void (node.attack.value = attack), [node, attack]);\n  useImmediateUpdateEffect(() => void (node.release.value = release), [node, release]);\n\n  return node;\n}\n\nexport default useDynamicsCompressorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDynamicsCompressorNode from \"hooks/nodes/useDynamicsCompressorNode\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n  useDynamicsCompressorNode(id, { attack, knee, ratio, release, threshold });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","export enum Parameters {\n  /**\n   * Defines how fast the envelope goes up, defined in seconds.\n   */\n  AttackTime = \"attack\",\n  /**\n   * Defines how fast the envelope goes down, defined in seconds.\n   */\n  ReleaseTime = \"release\",\n}\n\nexport const ParameterDefaults: Readonly<Record<Parameters, number>> = {\n  [Parameters.AttackTime]: 0.0002,\n  [Parameters.ReleaseTime]: 0.0004,\n};\n","import Node from \"components/Node\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ParameterDefaults, Parameters } from \"worklets/envelope-follower.types\";\n\ninterface EnvelopeFollowerNode {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.ReleaseTime]: AudioParam;\n}\n\nfunction EnvelopeFollower({ id, type, data, selected }: NodeProps) {\n  const { attack = ParameterDefaults.attack, release = ParameterDefaults.release, onChange } = data;\n\n  const workletId = `worklet_${id}`;\n  const workletNode = useAudioWorkletNode(workletId, \"envelope-follower\");\n  const node = useNode(\n    id,\n    () => ({\n      [Parameters.AttackTime]: workletNode.parameters.get(Parameters.AttackTime),\n      [Parameters.ReleaseTime]: workletNode.parameters.get(Parameters.ReleaseTime),\n      input: workletNode,\n      output: workletNode,\n    }),\n    [workletNode]\n  ) as EnvelopeFollowerNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attack), [node, attack]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", Parameters.AttackTime, Parameters.ReleaseTime]}\n      outputs={[\"output\"]}\n      title=\"Envelope Follower\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={0}\n              onChange={e => onChange({ [Parameters.AttackTime]: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={0}\n              onChange={e => onChange({ [Parameters.ReleaseTime]: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(EnvelopeFollower);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { AudioNode } from \"utils/audioContext\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\nconst FILTER_BANDS = BANDS_OCTAVES;\nconst FILTER_GAINS = Array(BANDS_OCTAVES.length).fill(0);\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n  return `${frequency}`;\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = FILTER_GAINS, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n\n  const filterNodes = FILTER_BANDS.map((frequency, index, frequencies) => {\n    const isLowShelf = index === 0;\n    const isHighShelf = index === frequencies.length - 1;\n    const isBandPass = !isLowShelf && !isHighShelf;\n\n    const gain = isBandPass ? gains[index] : 0;\n    const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n    const Q = octaveBandwidthToQ(bandwidth);\n\n    // While illegal by rules of hooks, the bands array is never changed in runtime so hook call order is preserved\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useBiquadFilterNode(`${id}_filter_${frequency}`, { frequency, gain, type, Q });\n  });\n\n  useEffect(\n    () => {\n      (filterNodes as AudioNode[])\n        .concat(outputNode)\n        .reduce((source, destination) => source.connect(destination), inputNode);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [inputNode, outputNode, ...filterNodes]\n  );\n\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  // AudioParam;\n  useEffect(() => {\n    filterNodes.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, gains]);\n  useEffect(() => {\n    filterNodes.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {filterNodes.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({\n                        gains: produce(\n                          gains,\n                          (draft: number[]) => void (draft[index] = +e.target.value)\n                        ),\n                      })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2) || 0} dB`;\n  useGainNode(id, { gain });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useConstantSourceNode(id, {});\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // Interface\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Inputs\n  const inputANode = useGainNode(`${id}_inputA`, {});\n  const inputBNode = useGainNode(`${id}_inputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputANode.connect(outputNode);\n    inputBNode.connect(outputNode);\n  }, [inputANode, inputBNode, outputNode]);\n\n  const toggleInput = useCallback(\n    () => onChange({ input: input === \"A\" ? \"B\" : \"A\" }),\n    [onChange, input]\n  );\n  useEffect(() => {\n    if (input === \"A\") {\n      inputANode.gain.setTargetAtTime(1, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(0, inputBNode.context.currentTime, 0.015);\n    } else {\n      inputANode.gain.setTargetAtTime(0, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(1, inputBNode.context.currentTime, 0.015);\n    }\n  }, [input, inputANode, inputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: undefined,\n      A: inputANode,\n      B: inputBNode,\n      output: outputNode,\n    }),\n    [inputANode, inputBNode, outputNode]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"A\", \"B\"]}\n      outputs={[\"output\"]}\n      title={`Input: ${input}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Twelfth must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detailed?: boolean;\n  detune?: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"0.7em\",\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detailed = false, detune = 0, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      {detailed && (\n        <>\n          &nbsp;\n          <small>\n            ({frequency.toFixed(2)} Hz\n            {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n          </small>\n        </>\n      )}\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useCallback } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport Note from \"components/Note\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keysOptions = [16, 28, 40, 64, 88];\nconst keyTwelfthOffset = -3;\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { keys = 16, octave = 2, onChange } = data;\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const frequencyNode = useConstantSourceNode(`${id}_frequency`, {});\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = frequencyNode;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      frequencyNode.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [frequencyNode]\n  );\n  const playNote = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const stopNote = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // const isLargeStep = useKeyPress(1);\n\n  function onKeyDown({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    switch (key) {\n      case \"a\":\n        setNote(1, 9);\n        playNote();\n        break;\n      case \"w\":\n        setNote(1, 10);\n        playNote();\n        break;\n      case \"s\":\n        setNote(1, 11);\n        playNote();\n        break;\n      case \"d\":\n        setNote(2, 0);\n        playNote();\n        break;\n      case \"r\":\n        setNote(2, 1);\n        playNote();\n        break;\n      case \"f\":\n        setNote(2, 2);\n        playNote();\n        break;\n      case \"t\":\n        setNote(2, 3);\n        playNote();\n        break;\n      case \"g\":\n        setNote(2, 4);\n        playNote();\n        break;\n      case \"h\":\n        setNote(2, 5);\n        playNote();\n        break;\n      case \"u\":\n        setNote(2, 6);\n        playNote();\n        break;\n      case \"j\":\n        setNote(2, 7);\n        playNote();\n        break;\n      case \"i\":\n        setNote(2, 8);\n        playNote();\n        break;\n      case \"k\":\n        setNote(2, 9);\n        playNote();\n        break;\n      case \"o\":\n        setNote(2, 10);\n        playNote();\n        break;\n      case \"l\":\n        setNote(2, 11);\n        playNote();\n        break;\n      case \"ö\":\n        setNote(3, 0);\n        playNote();\n        break;\n      default:\n        break;\n    }\n  }\n  function onKeyUp({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    stopNote();\n  }\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      frequency: frequencyNode,\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n    }),\n    [frequencyNode, gateNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div\n            className=\"keyboard\"\n            onMouseDown={playNote}\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            onMouseLeave={stopNote}\n            onMouseUp={stopNote}\n          >\n            {Array(keys)\n              .fill(null)\n              .map((_, keyIndex) => {\n                const keyTwelfth = (((keyIndex + keyTwelfthOffset) % 12) + 12) % 12;\n                const keyOctave = octave + Math.floor((keyIndex + keyTwelfthOffset) / 12);\n                const keyClassName = [1, 3, 6, 8, 10].includes(keyTwelfth) ? keyBlack : keyWhite;\n                console.log(keyOctave, keyTwelfth);\n                return (\n                  <button\n                    className={keyClassName}\n                    key={`${keyOctave}_${keyTwelfth}`}\n                    onMouseEnter={() => setNote(keyOctave, keyTwelfth)}\n                  >\n                    <Note octave={keyOctave} twelfth={keyTwelfth} />\n                  </button>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n          <select\n            onChange={e => onChange({ keys: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Keys\"\n            value={keys}\n          >\n            {keysOptions.map(keys => (\n              <option key={keys} value={keys}>\n                {keys}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { logarithmic } from \"utils/scale\";\nimport { float32toDb } from \"utils/units\";\n\nconst MAX_LEVEL = 6;\nconst MIN_LEVEL = -48;\nconst BUCKETS = MAX_LEVEL - MIN_LEVEL + 1;\nconst DPI_RATIO = window.devicePixelRatio ?? 1;\nconst LEVEL_GAP = 2;\nconst HEIGHT = 2;\nconst WIDTH = 25;\n\nfunction drawMeter(context: CanvasRenderingContext2D, levels: number[]) {\n  // high dpi\n  context.setTransform(DPI_RATIO, 0, 0, DPI_RATIO, 0, 0);\n\n  // reset\n  context.fillStyle = \"#000000\";\n  context.font = \"10px Arial\";\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  context.restore();\n\n  // rulers\n  Array(BUCKETS)\n    .fill(undefined)\n    .forEach((_, item) => {\n      const significant = [0, 6, 12, 18, 30, 42, 54].includes(item);\n      const rulerHeight = significant ? 1 : 0.5;\n      const rulerWidth = significant ? 6 : 3;\n      const levelText = `${MAX_LEVEL - item}`;\n      const groupX = 0;\n      const groupY = item * HEIGHT + 5.5;\n      const lineX = WIDTH - 8 + (significant ? 0 : 3);\n      const lineY = 0;\n      const textX = groupX + 15;\n      const textY = groupY;\n\n      if (significant) {\n        context.fillText(levelText, textX, textY);\n      }\n\n      context.lineWidth = rulerHeight;\n      context.fillRect(groupX + lineX, groupY + lineY, rulerWidth, rulerHeight);\n    });\n\n  // levels\n  levels.forEach((level, levelIndex) => {\n    Array(BUCKETS)\n      .fill(undefined)\n      .forEach((_, item) => {\n        const decibels = MAX_LEVEL - item;\n        const hue = Math.min(\n          Math.max(120 * logarithmic(Math.max(0, -decibels / 10)), 0),\n          120\n        ).toFixed(0);\n        const lightness = float32toDb(level) >= decibels ? \"50%\" : \"0%\";\n\n        context.fillStyle = `hsl(${hue}, 50%, ${lightness})`;\n        context.fillRect(\n          (levelIndex + 1) * (WIDTH + LEVEL_GAP) - LEVEL_GAP,\n          item * HEIGHT + 5,\n          WIDTH,\n          HEIGHT\n        );\n      });\n  });\n}\n\ntype ChannelMessageEvent = MessageEvent<{\n  payload: { channels: number; id: string };\n  type: \"channels\";\n}>;\ntype LevelMessageEvent = MessageEvent<{\n  payload: { channel: number; id: string; level: number };\n  type: \"level\";\n}>;\n\n// TODO add peak hold\nfunction Meter({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const levelsRef = useRef<number[]>([]);\n  const [channels, setChannels] = useState(1);\n\n  const canvasHeight = BUCKETS * HEIGHT + 10;\n  const canvasWidth = (WIDTH + LEVEL_GAP) * (channels + 1);\n\n  const node = useAudioWorkletNode(id, \"meter-processor\", { numberOfOutputs: 0 });\n\n  const handleMessage = useCallback(\n    ({ data: event }: ChannelMessageEvent | LevelMessageEvent) => {\n      if (event.type === \"channels\") {\n        if (event.payload.channels !== channels) {\n          setChannels(event.payload.channels);\n        }\n      }\n\n      if (event.type === \"level\") {\n        levelsRef.current[event.payload.channel] = event.payload.level;\n      }\n    },\n    [channels]\n  );\n  useEffect(() => {\n    node.port.onmessage = handleMessage;\n  }, [node, handleMessage]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawMeter(context, levelsRef.current.slice(0, channels));\n  }, [channels]);\n\n  useAnimationFrame(tick, true);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} title=\"Meter\" type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            width={DPI_RATIO * canvasWidth}\n            height={DPI_RATIO * canvasHeight}\n            style={{ height: canvasHeight, width: canvasWidth }}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Meter);\n","export function exponential(t: number): number {\n  return (Math.pow(10, t) - 1) / 9;\n}\n\nexport function linear(t: number): number {\n  return t;\n}\n\nexport function logarithmic(t: number): number {\n  return Math.log10(1 + t * 9);\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(\n        1,\n        context.sampleRate * measureDurationInSeconds,\n        context.sampleRate\n      );\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note =>\n      onChange({\n        notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note),\n      }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span\n              style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              {[\n                NoteValue.Whole,\n                NoteValue.Half,\n                NoteValue.Quarter,\n                NoteValue.Eight,\n                NoteValue.Sixteenth,\n              ].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#00d\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","export enum NoiseType {\n  Brown = \"Brown\",\n  Pink = \"Pink\",\n  White = \"White\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { NoiseType } from \"worklets/noise-processor.types\";\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n  useAudioWorkletNode(id, \"noise-processor\", { numberOfInputs: 0, processorOptions: { type } }, [type]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType.White}</option>\n              <option value={NoiseType.Pink}>{NoiseType.Pink}</option>\n              <option value={NoiseType.Brown}>{NoiseType.Brown}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"not-gate-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"or-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport { useEffect } from \"react\";\nimport { TOscillatorType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  type?: TOscillatorType;\n}\n\nfunction useOscillatorNode(id: string, { detune = 0, frequency = 440, type = \"sine\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.detune.value = detune), [node, detune]);\n  useImmediateUpdateEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useImmediateUpdateEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useOscillatorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detailed detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  // Outputs\n  const outputANode = useGainNode(`${id}_outputA`, {});\n  const outputBNode = useGainNode(`${id}_outputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputNode.connect(outputANode);\n    inputNode.connect(outputBNode);\n  }, [inputNode, outputANode, outputBNode]);\n\n  const toggleOutput = useCallback(\n    () => onChange({ output: output === \"A\" ? \"B\" : \"A\" }),\n    [onChange, output]\n  );\n  useEffect(() => {\n    if (output === \"A\") {\n      outputANode.gain.setTargetAtTime(1, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(0, outputBNode.context.currentTime, 0.015);\n    } else {\n      outputANode.gain.setTargetAtTime(0, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(1, outputBNode.context.currentTime, 0.015);\n    }\n  }, [output, outputANode, outputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: inputNode,\n      A: outputANode,\n      B: outputBNode,\n      output: undefined,\n    }),\n    [inputNode, outputANode, outputBNode]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={[\"A\", \"B\"]}\n      title={`Output: ${output}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange } = data;\n  useAudioWorkletNode(id, \"quantizer-processor\", { processorOptions: { levels, max, min } }, [levels, max, min]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Quantizer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n  useAudioWorkletNode(id, \"rectifier-processor\", { processorOptions: { mode } }, [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  OnSet = \"OnSet\",\n  Bpm = \"Bpm\",\n  Pitch = \"Pitch\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Mode } from \"worklets/aubio-processor.types\";\n\nfunction Aubio({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange, mode = Mode.OnSet } = data;\n  useAudioWorkletNode(\n    id,\n    \"aubio-processor\",\n    {\n      processorOptions: {\n        levels,\n        max,\n        min,\n        mode,\n      },\n    },\n    [levels, max, min, mode]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={[\"output\", mode]}\n      title={`Aubio: ${mode}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <select\n              style={{ width: \"100%\" }}\n              onChange={e => onChange({ mode: e.target.value })}\n              title=\"Type\"\n              value={mode}\n            >\n              <option value={Mode.OnSet}>{Mode.OnSet}</option>\n              <option value={Mode.Bpm}>{Mode.Bpm}</option>\n              <option value={Mode.Pitch}>{Mode.Pitch}</option>\n            </select>\n          </div>\n          {/* <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div> */}\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Aubio);\n","/* eslint-disable no-unused-expressions */\nexport const getMedia = async clientDevice => {\n  try {\n    return await navigator.mediaDevices.getUserMedia({\n      audio: clientDevice === null ? true : { deviceId: { exact: clientDevice.deviceId } },\n      video: false,\n    });\n  } catch (err) {\n    console.log(\"Error:\", err);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport { getMedia } from \"../../utils/getMedia\";\n// import { AudioBufferSourceNode } from \"utils/audioContext\";\n\nfunction AudioDeviceSource({ id, type, selected }: NodeProps) {\n  // const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  const [devices, setDevices] = useState<Array<any>>([]);\n  const [clientDevice, setClientDevice] = useState(null);\n  const [label, setLabel] = useState();\n  const node = useNode(id, context => context.createGain());\n\n  let s: any;\n\n  const play = () => {\n    console.log(clientDevice);\n    getMedia(clientDevice).then((stream: any) => {\n      s = stream;\n      const source = node.context.createMediaStreamSource(stream);\n      source.connect(node);\n    });\n  };\n  const stop = () => {\n    if (node.context) {\n      s.getTracks().forEach((track: any) => track.stop());\n      node.context.close();\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    if (clientDevice) {\n      setLabel(clientDevice[\"label\"]);\n    }\n  }, [clientDevice]);\n\n  useEffect(() => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log(\"enumerateDevices() not supported.\");\n      return;\n    }\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (dev) {\n        dev.length && setDevices(dev.filter(d => d.kind === \"audioinput\"));\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  }, []);\n\n  console.log(devices);\n  return (\n    <Node id={id} outputs={[\"output\"]} type={type} title={`Source: AudioDevice`}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={() => play()}>▶</button>\n          <button onClick={() => stop()}>◽</button>\n        </div>\n      </div>\n      {selected && devices.length > 0 && (\n        <select\n          value={label}\n          onChange={e => setClientDevice(devices.find(d => d.label === e.target.value))}\n        >\n          {devices && devices.map((d, i) => <option key={i}>{d.label}</option>)}\n        </select>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(AudioDeviceSource);\n","export enum Parameters {\n  HoldTime = \"holdTime\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Parameters } from \"worklets/sample-and-hold-processor.types\";\n\nfunction SampleAndHold({ id, type }: NodeProps) {\n  const workletNode = useAudioWorkletNode(`${id}_worklet`, \"sample-and-hold-processor\");\n\n  useNode(\n    id,\n    () => ({\n      [Parameters.HoldTime]: workletNode.parameters.get(Parameters.HoldTime),\n      input: workletNode,\n      output: workletNode,\n    }),\n    [workletNode]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", Parameters.HoldTime]}\n      outputs={[\"output\"]}\n      title=\"Sample/Hold\"\n      type={type}\n    />\n  );\n}\n\nexport default React.memo(SampleAndHold);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Sign({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"sign-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"hooks/state/useNodeStore\";\n\ninterface Options {\n  pan?: number;\n}\n\nfunction useStereoPannerNode(id: string, { pan = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return node;\n}\n\nexport default useStereoPannerNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useStereoPannerNode from \"hooks/nodes/useStereoPannerNode\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n  useStereoPannerNode(id, { pan });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n  useAudioWorkletNode(\n    id,\n    \"transformer-processor\",\n    {\n      processorOptions: {\n        inputMin,\n        inputMax,\n        outputMin,\n        outputMax,\n      },\n    },\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","export function* generate<T>(length: number, generator: (index: number) => T): Generator<T> {\n  for (let i = 0; i < length; i++) {\n    yield generator(i);\n  }\n}\n\nexport function generateArray<T>(length: number, generator: (index: number) => T): Array<T> {\n  return Array.from(generate(length, generator));\n}\n\nexport function first<T>(collection: ArrayLike<T>): T | undefined {\n  return collection.length ? collection[0] : undefined;\n}\n\nexport function last<T>(collection: ArrayLike<T>): T | undefined {\n  return collection.length ? collection[collection.length - 1] : undefined;\n}\n\nexport function* generateZip<A, B>(a: A[], b: B[]): Generator<[A, B]> {\n  const length = Math.min(a.length, b.length);\n  for (let index = 0; index < length; index++) {\n    yield [a[index], b[index]];\n  }\n}\n\nexport function zip<A, B>(a: A[], b: B[]): [A, B][] {\n  return Array.from(generateZip(a, b));\n}\n","export function noop() {}\n","import { useCallback, useEffect, useState } from \"react\";\n\n/**\n * @param targetKey The `KeyEvent.key` to match.\n * @returns `true` if the key is pressed, or false otherwise.\n */\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n  const downHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    },\n    [targetKey]\n  );\n\n  const upHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey]\n  );\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [downHandler, upHandler]);\n  return keyPressed;\n}\n","import { useKeyPress } from \"hooks/useKeyPress\";\nimport React from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  largeStep?: number;\n  standardStep?: number;\n  smallStep?: number;\n  value: number;\n}\n\nconst LARGE_STEP_MODIFIER_KEY = \"Shift\";\nconst SMALL_STEP_MODIFIER_KEY = \"Alt\";\n\nfunction NumericStepper({\n  onChange,\n  value,\n  largeStep = 10,\n  standardStep = 1,\n  smallStep = 0.1,\n  ...props\n}: Props) {\n  const isLargeStep = useKeyPress(LARGE_STEP_MODIFIER_KEY);\n  const isSmallStep = useKeyPress(SMALL_STEP_MODIFIER_KEY);\n  const step = isLargeStep ? largeStep : isSmallStep ? smallStep : standardStep;\n\n  function onKeyDown({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    if (key === \"ArrowUp\") {\n      onChange(roundToFixed(value + step));\n    } else if (key === \"ArrowDown\") {\n      onChange(roundToFixed(value - step));\n    }\n\n    function roundToFixed(num: number) {\n      return Math.round(num * 10) / 10;\n    }\n  }\n\n  return (\n    <input\n      {...props}\n      type=\"number\"\n      // Step is handled via JS, because Alt+DownArrow isn't picked up by the\n      // input on Mac.\n      step=\"0\"\n      onKeyDown={onKeyDown}\n      onChange={event => onChange(+event.target.value)}\n      value={value}\n    />\n  );\n}\n\nexport default NumericStepper;\n","import NumericStepper from \"components/controls/NumericStepper\";\nimport React, { useCallback } from \"react\";\nimport { dbToFloat32, float32toDb } from \"utils/units\";\nimport { BandStyle, FilterDescription } from \"./types\";\n\ntype GainChangeHandler = (gain: number) => void;\ntype QChangeHandler = (q: number) => void;\n\ninterface Props {\n  bandStyle: BandStyle;\n  filterDesc: FilterDescription;\n  onGainChange: GainChangeHandler;\n  onQChange: QChangeHandler;\n}\n\nexport function BandStrip({ filterDesc, bandStyle, onGainChange, onQChange }: Props) {\n  const gainHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onGainChange(float32toDb(e.target.valueAsNumber));\n    },\n    [onGainChange]\n  );\n\n  return (\n    <div className=\"vocoderNode_bandStrip\">\n      <div className=\"centerHz\">{filterDesc.hz}</div>\n      <div className=\"colorSwatch\" style={{ background: bandStyle.freqColor }}></div>\n      <input\n        type=\"range\"\n        onChange={gainHandler}\n        value={dbToFloat32(filterDesc.gainDb)}\n        max={3}\n        min={0.0001}\n        step={0.001}\n      />\n      <NumericStepper value={filterDesc.q} min={0} max={60} onChange={onQChange} />\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport Node from \"components/Node\";\nimport { nodeCleanup } from \"hooks/state/useNodeStore\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport useAnalyserNode from \"hooks/nodes/useAnalyserNode\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport produce from \"immer\";\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { generate, generateArray, zip } from \"utils/collections\";\nimport { noop } from \"utils/functions\";\nimport { dbToFloat32 } from \"utils/units\";\nimport { Parameters } from \"worklets/envelope-follower.types\";\nimport { BandStrip } from \"./BandStrip\";\nimport color from \"color\";\nimport { BandResponse, BandStyle, FilterDescription } from \"./types\";\nimport \"./Vocoder.css\";\n\nconst FFT_SIZE = 1024;\nconst FFT_SIZE_EXP = Math.log2(FFT_SIZE);\nconst BIN_COUNT = FFT_SIZE / 2;\n\nconst RESPONSE_STEPS = 240;\nconst MIN_HZ = 0;\nconst MAX_HZ = 4000;\n\nconst FILTER_BANDS: FilterDescription[] = [\n  { hz: 101, type: \"lowpass\", gainDb: -2.55, q: 0.55 },\n  { hz: 154, type: \"bandpass\", gainDb: -2.4, q: 2.96 },\n  { hz: 208, type: \"bandpass\", gainDb: -2.4, q: 4 },\n  { hz: 285, type: \"bandpass\", gainDb: -3, q: 3.55 },\n  { hz: 395, type: \"bandpass\", gainDb: -2.5, q: 3.7 },\n  { hz: 542, type: \"bandpass\", gainDb: -3.12, q: 3.75 },\n  { hz: 720, type: \"bandpass\", gainDb: -2.8, q: 3.7 },\n  { hz: 1013, type: \"bandpass\", gainDb: -2.8, q: 3.9 },\n  { hz: 1495, type: \"bandpass\", gainDb: -3.4, q: 3.2 },\n  { hz: 2001, type: \"bandpass\", gainDb: -3.15, q: 5.16 },\n  { hz: 2546, type: \"bandpass\", gainDb: -2.8, q: 4.48 },\n  { hz: 3030, type: \"highpass\", gainDb: -2, q: 0.88 },\n];\n\nexport function Vocoder({ id, type }: NodeProps) {\n  // Input/output nodes\n  const modInputNode = useGainNode(`${id}_modulate`, {});\n  const modAnalyser = useAnalyserNode(`${id}_modulate_analyser`, { fftSizeExp: FFT_SIZE_EXP });\n  const carrierInputNode = useGainNode(`${id}_carrier`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n\n  // Modulator bank configuration\n  const [modConfig, setModConfig] = useState(produce(FILTER_BANDS, noop));\n\n  // Whether the graph is connected to its inputs\n  const [paused, setPaused] = useState(false);\n\n  // The number of samples per second\n  const sampleRate = modInputNode.context.sampleRate;\n\n  // Construct the nodes that make up the modulator's filter bank\n  const modFilterBank = modConfig.map(({ hz, type, gainDb, q }) => {\n    // While illegal by rules of hooks, the bands array is never rearranged in\n    // runtime so hook call order is preserved\n    const gainNode = useGainNode(`${id}_modulate_gain_${hz}`, {\n      gain: dbToFloat32(gainDb),\n      instant: true,\n    });\n\n    const biquadNode = useBiquadFilterNode(`${id}_modulate_filter1_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n\n    const envelopeFollower = useAudioWorkletNode(\n      `${id}_modulate_envelope_${hz}`,\n      \"envelope-follower\",\n      {\n        parameterData: {\n          [Parameters.AttackTime]: 0,\n          [Parameters.ReleaseTime]: 0.0003,\n        },\n      }\n    );\n\n    return {\n      filter: biquadNode,\n      gain: gainNode,\n      envelopeFollower: envelopeFollower,\n    };\n  });\n\n  // Calculate filter responses\n  const responsesByBand = new Map<number, BandResponse>();\n  const stepCount = RESPONSE_STEPS;\n  const stepSize = (MAX_HZ - MIN_HZ) / stepCount;\n  const freqs = Float32Array.from(generate(stepCount, i => i * stepSize + MIN_HZ));\n\n  for (let i = 0; i < modConfig.length; i++) {\n    const bandResponse = useMemo(() => {\n      const { filter, gain } = modFilterBank[i];\n\n      const magResponse = new Float32Array(freqs.length);\n      const phaseResponse = new Float32Array(freqs.length);\n\n      filter.getFrequencyResponse(freqs, magResponse, phaseResponse);\n      const gainAdjustedMagResponse = magResponse.map(mag => mag * gain.gain.value);\n\n      return {\n        frequencies: freqs,\n        magResponse: gainAdjustedMagResponse,\n        phaseResponse,\n      };\n    }, [modConfig[i]]);\n\n    responsesByBand.set(modConfig[i].hz, bandResponse);\n  }\n\n  const carrierFilterBank = modConfig.map(({ hz, type, q }) => {\n    // While illegal by rules of hooks, the bands array is never changed in\n    // runtime so hook call order is preserved\n    const filterNode1 = useBiquadFilterNode(`${id}_carrier_filter1_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n    const filterNode2 = useBiquadFilterNode(`${id}_carrier_filter2_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n\n    const gainNode = useGainNode(`${id}_carrier_gain_${hz}`, {\n      gain: 0,\n      instant: true,\n    });\n\n    const analyserNode = useAnalyserNode(`${id}_carrier_analyser_${hz}`, {\n      fftSizeExp: FFT_SIZE_EXP,\n    });\n\n    return {\n      filter1: filterNode1,\n      filter2: filterNode2,\n      gain: gainNode,\n      analyser: analyserNode,\n    };\n  });\n\n  useEffect(\n    () => {\n      modInputNode.connect(modAnalyser);\n\n      for (const { gain, filter, envelopeFollower } of modFilterBank) {\n        // Connect up the chain\n        const binModulatorNodes = [filter, gain, envelopeFollower];\n        binModulatorNodes.reduce((acc, node) => {\n          return acc ? (node ? acc.connect(node) : acc) : node;\n        });\n      }\n\n      for (const [i, { filter1, filter2, gain, analyser }] of carrierFilterBank.entries()) {\n        const binCarrierNodes = [filter1, filter2, gain, analyser];\n\n        // Connect up the chain\n        binCarrierNodes.reduce((acc, node) => {\n          return !!acc ? (node ? acc.connect(node) : acc) : node;\n        });\n\n        // Modulate the carrier gain from the equivalent modulation node\n        modFilterBank[i].envelopeFollower.connect(gain.gain);\n\n        // And connect the carrier to the output\n        gain.connect(outputNode);\n      }\n    },\n    // We use a constant, because there's no reason for this to change at runtime,\n    // and spreading out all the nodes into a list seems so wasteful.\n    [outputNode]\n  );\n\n  // Connect or disconnect from input when `active` changes\n  useEffect(() => {\n    for (const { filter } of modFilterBank) {\n      // Connect to the modulator\n      if (paused) modInputNode.disconnect(filter);\n      else modInputNode.connect(filter);\n    }\n\n    for (const { filter1 } of carrierFilterBank) {\n      // Connect the carrier to the chain\n      if (paused) carrierInputNode.disconnect(filter1);\n      else carrierInputNode.connect(filter1);\n    }\n  }, [paused]);\n\n  useNode(\n    id,\n    () => ({\n      carrier: carrierInputNode,\n      modulation: modInputNode,\n      input: undefined,\n      output: outputNode,\n      stop() {},\n      disconnect() {\n        nodeCleanup(carrierInputNode);\n        nodeCleanup(modInputNode);\n        nodeCleanup(outputNode);\n      },\n    }),\n    [carrierInputNode, modInputNode, outputNode]\n  );\n\n  // Draw frequency response changes\n  const freqResponseCanvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = freqResponseCanvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawFrequencyResponse(context, responsesByBand, { min: MIN_HZ, max: MAX_HZ });\n  }, [responsesByBand]);\n\n  const carrierBandBins = useRef([] as { frequency: number; freqBins: Uint8Array }[]);\n  const carrierAnalyserCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const getFrequencyData = useCallback(() => {\n    const filtersFrequencies = generateArray(FILTER_BANDS.length, i => {\n      const freqBins = new Uint8Array(BIN_COUNT);\n      const analyserNode = carrierFilterBank[i].analyser!;\n      analyserNode.getByteFrequencyData(freqBins);\n      return { frequency: FILTER_BANDS[i].hz, freqBins };\n    });\n\n    carrierBandBins.current = filtersFrequencies;\n    return sampleRate;\n  }, [sampleRate, ...carrierFilterBank]);\n\n  const draw = useCallback((sampleRate: number) => {\n    const canvas = carrierAnalyserCanvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawBinsAsLine(context, carrierBandBins.current, {\n      sampleRate: sampleRate,\n      min: MIN_HZ,\n      max: MAX_HZ,\n    });\n  }, []);\n\n  const tick = useCallback(() => {\n    const sampleRate = getFrequencyData();\n    draw(sampleRate);\n  }, [draw, getFrequencyData]);\n\n  useAnimationFrame(tick, !paused);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"carrier\", \"modulation\"]}\n      outputs={[\"output\"]}\n      title=\"Vocoder\"\n      type={type}\n    >\n      <div className=\"vocoderNode_canvasHost\">\n        <canvas\n          ref={carrierAnalyserCanvasRef}\n          style={{ display: \"block\", width: 800, height: 400 }}\n          width=\"600\"\n          height=\"300\"\n        />\n        <canvas\n          ref={freqResponseCanvasRef}\n          className=\"vocoderNode_overlayCanvas\"\n          width=\"800\"\n          height=\"400\"\n        />\n        <button className=\"vocoderNode_overlayPause\" onClick={() => setPaused(!paused)}>\n          {paused ? \"Run\" : \"Pause\"}\n        </button>\n      </div>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"vocoderNode_bandStrips\">\n          {modConfig.map((filterDesc, i) => {\n            const gainHandler = (gainDb: number) =>\n              setModConfig(\n                produce(modConfig, draft => {\n                  draft[i].gainDb = gainDb;\n                })\n              );\n            const qHandler = (q: number) =>\n              setModConfig(\n                produce(modConfig, draft => {\n                  draft[i].q = q;\n                })\n              );\n            return (\n              <BandStrip\n                key={filterDesc.hz}\n                filterDesc={filterDesc}\n                bandStyle={BAND_COLORS[i]}\n                onGainChange={gainHandler}\n                onQChange={qHandler}\n              ></BandStrip>\n            );\n          })}\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nfunction drawFrequencyResponse(\n  context: CanvasRenderingContext2D,\n  bandResponses: Map<number, BandResponse>,\n  { min, max }: { min: number; max: number }\n) {\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  const toLog = (value: number) => (value === 0 ? 0 : Math.log10(value / 100));\n  const minLog = toLog(min);\n  const maxLog = toLog(max);\n  const getX = (hz: number) => {\n    const hzLog = toLog(hz);\n    return width * ((hzLog - minLog) / (maxLog - minLog));\n  };\n\n  context.clearRect(0, 0, width, height);\n\n  const responseUnitHeight = height / 3;\n\n  // Then draw the response lines on top\n  for (const [i, { hz: bandHz }] of FILTER_BANDS.entries()) {\n    const { frequencies, magResponse } = bandResponses.get(bandHz)!;\n    const { responseColor } = BAND_COLORS[i]!;\n\n    context.strokeStyle = color(responseColor).alpha(0.26).rgb().string();\n    context.lineWidth = 2;\n\n    const gradient = context.createLinearGradient(0, height, 0, 0);\n    gradient.addColorStop(0, color(responseColor).alpha(0.15).rgb().string());\n    gradient.addColorStop(0.2, color(responseColor).alpha(0.1).rgb().string());\n    gradient.addColorStop(1, color(responseColor).alpha(0.01).rgb().string());\n\n    let lineStarted = false;\n    let x: number = 0;\n    let minY: number = height;\n\n    const frequencyCount = magResponse.length;\n    for (let i = 0; i < frequencyCount; i++) {\n      const hz = frequencies[i];\n      x = getX(hz);\n      const y = height - responseUnitHeight * magResponse[i];\n      minY = Math.min(y, minY);\n\n      if (!lineStarted) {\n        context.beginPath();\n        context.moveTo(x, y);\n        lineStarted = true;\n      } else {\n        context.lineTo(x, y);\n      }\n    }\n\n    context.stroke();\n    context.lineTo(x, height);\n    context.lineTo(0, height);\n    context.closePath();\n    context.fillStyle = gradient;\n\n    context.fill();\n  }\n}\n\n// function drawBins(\n//   context: CanvasRenderingContext2D,\n//   bandBins: { frequency: number; freqBins: Uint8Array }[],\n//   {\n//     min,\n//     max,\n//     sampleRate,\n//   }: {\n//     min: number;\n//     max: number;\n//     sampleRate: number;\n//   }\n// ) {\n//   const height = context.canvas.height;\n//   const width = context.canvas.width;\n\n//   context.clearRect(0, 0, width, height);\n\n//   if (!bandBins.length) {\n//     return;\n//   } else if (bandBins.length > BAND_COLORS.length) {\n//     console.error(\"Not enough frequency colors\");\n//     return;\n//   }\n\n//   const bandwidth = sampleRate / 2;\n//   const binRangeStart = Math.floor(BIN_COUNT * (min / bandwidth));\n//   const binRangeEnd = Math.ceil(BIN_COUNT * (max / bandwidth));\n//   const binRangeLength = binRangeEnd - binRangeStart;\n\n//   const binBarWidth = width / binRangeLength;\n//   const unclippedHeight = height - 60;\n//   const cumulativeHeightsPerBin = generateArray(binRangeLength, () => 0);\n\n//   // Draw the frequency bins for this passband\n//   for (const [i, { freqBins }] of bandBins.entries()) {\n//     const { freqColor } = BAND_COLORS[i]!;\n//     context.fillStyle = freqColor;\n\n//     let x = 0; // Reset x\n//     const freqRange = freqBins.subarray(binRangeStart, binRangeEnd);\n//     for (let i = 0; i < binRangeLength; i++) {\n//       const barHeight = unclippedHeight * (freqRange[i] / 255.0);\n//       const y = height - barHeight - cumulativeHeightsPerBin[i];\n//       context.fillRect(x, y, binBarWidth, barHeight);\n\n//       x += binBarWidth;\n//       cumulativeHeightsPerBin[i] += barHeight;\n//     }\n//   }\n// }\n\nfunction drawBinsAsLine(\n  context: CanvasRenderingContext2D,\n  bandBins: { frequency: number; freqBins: Uint8Array }[],\n  {\n    min,\n    max,\n    sampleRate,\n  }: {\n    min: number;\n    max: number;\n    sampleRate: number;\n  }\n) {\n  if (!bandBins.length) {\n    return;\n  } else if (bandBins.length > BAND_COLORS.length) {\n    console.error(\"Not enough frequency colors\");\n    return;\n  }\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  const toLog = (value: number) => (value === 0 ? 0 : Math.log10(value / 100));\n  const minLog = toLog(min);\n  const maxLog = toLog(max);\n  const getX = (hz: number) => {\n    const hzLog = toLog(hz);\n    return width * ((hzLog - minLog) / (maxLog - minLog));\n  };\n\n  context.clearRect(0, 0, width, height);\n\n  const bandwidth = sampleRate / 2;\n\n  const binRangeStart = Math.floor(BIN_COUNT * (min / bandwidth));\n  const binRangeEnd = Math.ceil(BIN_COUNT * (max / bandwidth));\n  const binRangeLength = binRangeEnd - binRangeStart;\n\n  const hzStepPerBin = bandwidth / BIN_COUNT;\n  const binHzStart = binRangeStart * hzStepPerBin;\n\n  const unclippedHeight = height - 60;\n\n  // Draw the frequency bins for this passband\n  for (const [i, { freqBins }] of bandBins.entries()) {\n    const { freqColor } = BAND_COLORS[i]!;\n    context.strokeStyle = freqColor;\n    context.lineWidth = 2;\n    context.beginPath();\n\n    let x = 0; // Reset x\n    let lineStarted = false;\n    const freqRange = freqBins.subarray(binRangeStart, binRangeEnd);\n    for (let i = 0; i < binRangeLength; i++) {\n      const hz = binHzStart + i * hzStepPerBin;\n      x = getX(hz);\n      const barHeight = unclippedHeight * (freqRange[i] / 255.0);\n      const y = height - barHeight;\n\n      if (!lineStarted) {\n        context.moveTo(x, y);\n        lineStarted = true;\n      } else {\n        context.lineTo(x, y);\n      }\n    }\n\n    context.stroke();\n  }\n}\n\nconst FREQ_COLORS = [\n  \"#fff566\",\n  \"#b37feb\",\n  \"#5cdbd3\",\n  \"#85a5ff\",\n  \"#ff85c0\",\n  \"#95de64\",\n  \"#ffd666\",\n  \"#ff7875\",\n  \"#ff9c6e\",\n  \"#ffc069\",\n  \"#d3f261\",\n  \"#69c0ff\",\n];\n\nconst FREQ_RESPONSE_COLORS = [\n  \"#ffec3d\",\n  \"#9254de\",\n  \"#36cfc9\",\n  \"#597ef7\",\n  \"#f759ab\",\n  \"#73d13d\",\n  \"#ffc53d\",\n  \"#ff4d4f\",\n  \"#ff7a45\",\n  \"#ffa940\",\n  \"#bae637\",\n  \"#40a9ff\",\n];\n\nconst BAND_COLORS: BandStyle[] = zip(FREQ_COLORS, FREQ_RESPONSE_COLORS).map(\n  ([freqColor, responseColor]) => ({\n    freqColor,\n    responseColor,\n  })\n);\n\nexport default React.memo(Vocoder);\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useAudioContext } from \"hooks/state/useAudioContext\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  const { audioContext } = useAudioContext();\n  const curve = useMemo(() => {\n    const curve = new Float32Array(audioContext.sampleRate);\n    // eslint-disable-next-line no-new-func\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [audioContext.sampleRate, lastValidCurveFn]);\n\n  // AudioNode\n  useWaveShaperNode(id, { curve, oversample });\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line no-new-func\n      new Function(\"curve\", curveFn)(new Float32Array(audioContext.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [audioContext.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ oversample: e.target.value })}\n              title=\"Oversample\"\n              value={oversample}\n            >\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\n\nfunction Wled({ id, type, selected }: NodeProps) {\n  return (\n    <Node id={id} inputs={[\"input\"]} type={type} title={`WLED: ${id.substring(0, 11)}`}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input type=\"text\" title=\"Host\" />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Wled);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"xor-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"hooks/state/useNodeStore\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction drawAxes(context: CanvasRenderingContext2D) {\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  context.clearRect(0, 0, width, height);\n  context.setLineDash([4, 4]);\n  context.fillStyle = \"#000000\";\n  context.font = \"20px monospace\";\n  context.lineWidth = 1;\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n\n  context.beginPath();\n  context.moveTo(30, height / 2);\n  context.lineTo(width - 30, height / 2);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width / 2, 15);\n  context.fillText(\"-1\", width / 2, height - 15);\n\n  context.beginPath();\n  context.moveTo(width / 2, 30);\n  context.lineTo(width / 2, height - 30);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width - 15, height / 2);\n  context.fillText(\"-1\", 15, height / 2);\n}\n\nfunction getXY(event: any) {\n  const canvas = event.target;\n  const rect = canvas.getBoundingClientRect();\n  const x = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2);\n  const y = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2);\n\n  return { x, y };\n}\n\nfunction XYPad({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawAxes(context);\n  }, []);\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const xNode = useConstantSourceNode(`${id}_x`, {});\n  const yNode = useConstantSourceNode(`${id}_y`, {});\n\n  const setXY = useCallback(\n    ({ x, y }: { x: number; y: number }) => {\n      xNode.offset.setTargetAtTime(x, xNode.context.currentTime, 0.015);\n      yNode.offset.setTargetAtTime(y, yNode.context.currentTime, 0.015);\n    },\n    [xNode, yNode]\n  );\n  const gateOn = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const gateOff = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n      x: xNode,\n      y: yNode,\n    }),\n    [gateNode, xNode, yNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"x\", \"y\", \"gate\"]} title={`XY Pad`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            height={400}\n            onMouseMove={event => setXY(getXY(event))}\n            style={{ background: \"white\", cursor: \"crosshair\", height: 200, width: 200 }}\n            width={400}\n            onMouseDown={gateOn}\n            onMouseUp={gateOff}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(XYPad);\n","import NumericStepper from \"components/controls/NumericStepper\";\nimport Node from \"components/Node\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\n\nfunction RawGain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange } = data;\n  const title = `Gain: ${gain.toFixed(2)}`;\n  useGainNode(id, { gain, instant: true });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <NumericStepper value={gain} onChange={gain => onChange({ gain })} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(RawGain);\n","import FlowContextMenu from \"components/FlowContextMenu\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport Clipper from \"components/nodes/Clipper\";\nimport Comparator from \"components/nodes/Comparator\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport EnvelopeFollower from \"components/nodes/EnvelopeFollower\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Meter from \"components/nodes/Meter\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Quantizer from \"components/nodes/Quantizer\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport Aubio from \"components/nodes/Aubio\";\nimport AudioDeviceSource from \"components/nodes/AudioDeviceSource\";\nimport SampleAndHold from \"components/nodes/SampleAndHold\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport Vocoder from \"components/nodes/Vocoder\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport Wled from \"components/nodes/Wled\";\nimport XorGate from \"components/nodes/XorGate\";\nimport XYPad from \"components/nodes/XYPad\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"hooks/state/useProject\";\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  isEdge,\n  isNode,\n  Node as ReactFlowNode,\n  OnConnectStartParams,\n  OnLoadParams as ReactFlowInstance,\n  removeElements,\n} from \"react-flow-renderer\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport RawGain from \"./nodes/RawGain\";\nimport { AnyAudioNode, useNodeStore } from \"hooks/state/useNodeStore\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  Aubio: Aubio,\n  AudioBufferSource: AudioBufferSource,\n  AudioDeviceSource: AudioDeviceSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  Clipper: Clipper,\n  Comparator: Comparator,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  EnvelopeFollower: EnvelopeFollower,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Meter: Meter,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Quantizer: Quantizer,\n  RawGain: RawGain,\n  Rectifier: Rectifier,\n  SampleAndHold: SampleAndHold,\n  Vocoder: Vocoder,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  Wled: Wled,\n  XorGate: XorGate,\n  XYPad: XYPad,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection): Edge {\n  if (!params.source) {\n    return params as Edge;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      // stroke: '#0dbedc',\n      stroke: `#0dbed${params.source.substr(-1)}`,\n    },\n  }) as Edge;\n}\n\nasync function waitForInitialNodes(\n  initialElements: Elements,\n  audioNodes: Record<string, AnyAudioNode>\n) {\n  const nodesWithConnections = initialElements\n    .filter(isEdge)\n    .reduce<Record<string, boolean>>((nodeIds, edge) => {\n      nodeIds[edge.source] = true;\n      nodeIds[edge.target] = true;\n      return nodeIds;\n    }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform, addElement } =\n    useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeStore();\n  const [tryingToConnect, setTryingToConnect] = useState<OnConnectStartParams | null>(null);\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        elements.map(node => {\n          if (isNode(node)) {\n            return {\n              ...node,\n              data: {\n                ...node.data,\n                onChange: onChangeElementFactory(node.id),\n              },\n            };\n          }\n          return node;\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnectStart = useCallback((e: React.MouseEvent, params: OnConnectStartParams) => {\n    setTryingToConnect(params);\n  }, []);\n  const onConnectStop = useCallback((e: MouseEvent) => setTryingToConnect(null), []);\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements(addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements, elements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements(removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements, elements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements(removeElements([oldEdge], elements));\n      setElements(addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements, elements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        elements.map(element => {\n          if (isNode(element) && element.id === draggedNode.id) {\n            return {\n              ...element,\n              position: {\n                x: snapToGrid(draggedNode.position.x),\n                y: snapToGrid(draggedNode.position.y),\n              },\n            };\n          }\n          return element;\n        })\n      );\n    },\n    [setElements, elements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      addElement({\n        id,\n        data: { onChange },\n        type,\n        position,\n      });\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, transform, addElement]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({\n        width: 0,\n        height: 0,\n        top: event.clientY,\n        right: 0,\n        bottom: 0,\n        left: event.clientX,\n      } as DOMRect);\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        data-connecting-handletype={tryingToConnect ? tryingToConnect.handleType : undefined}\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onConnectStart={onConnectStart}\n        onConnectStop={onConnectStop}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        selectNodesOnDrag={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","export default __webpack_public_path__ + \"static/media/logo.7b27df5c.svg\";","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useProject } from \"hooks/state/useProject\";\nimport logo from \"logo.svg\";\nimport { ProjectStateData } from \"types/Project\";\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: 80,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst topbarStyles: React.CSSProperties = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  paddingRight: \"2rem\",\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  height: 70,\n  backgroundColor: \"#0dbedc\",\n  backgroundSize: \"25%\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"-5% center\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"calc(100% - 70px)\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 70,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nfunction Project() {\n  const {\n    elements,\n    id,\n    setElements,\n    setId,\n    setTransform,\n    transform,\n    clear,\n    set: setProject,\n  } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    if (window.location.hash) {\n      const project = atob(window.location.hash?.substr(1));\n      try {\n        setProject(JSON.parse(project) as ProjectStateData);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, [setProject]);\n\n  // Store project in URL\n  useEffect(() => {\n    console.log(\n      \"share link\",\n      `${window.location.href}/#${btoa(JSON.stringify({ elements, id, transform }))}`\n    );\n    // window.history.replaceState(\n    //   null,\n    //   document.title,\n    //   \"#\" +\n    //     btoa(\n    //       JSON.stringify({\n    //         elements: elements.map(element => ({ ...element, __rf: undefined })),\n    //         id,\n    //         transform,\n    //       })\n    //     )\n    // );\n  }, [elements, id, transform]);\n\n  return (\n    <>\n      <div style={{ ...topbarStyles, backgroundImage: `url(${logo})` }}>\n        <button\n          onClick={() => {\n            document.querySelectorAll(\"body\")[0].classList.toggle(\"darkmode\");\n          }}\n        >\n          toggle darkmode\n        </button>\n      </div>\n      <div style={drawerStyles}>\n        <textarea\n          onChange={e => {\n            try {\n              const { elements, id, transform } = JSON.parse(e.target.value ?? \"\");\n              setElements(elements);\n              setId(id);\n              setTransform(transform);\n            } catch (e) {\n              console.error(e);\n            }\n          }}\n          style={textareaStyles}\n          value={JSON.stringify(\n            {\n              elements: elements.map(element => ({ ...element, __rf: undefined })),\n              id,\n              transform,\n            },\n            null,\n            2\n          )}\n        />\n        <div style={controlsStyles}>\n          <button onClick={() => clear()} style={{ marginRight: 10 }}>\n            clear\n          </button>\n          <button onClick={() => setVisible(visible => !visible)}>\n            {visible ? \"hide\" : \"show\"}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Project;\n","import { ReactFlowProvider } from \"react-flow-renderer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Project from \"components/Project\";\nimport { useProject } from \"hooks/state/useProject\";\n\nfunction App() {\n  const project = useProject();\n\n  return (\n    <Audio>\n      <ReactFlowProvider>\n        <ContextMenu>\n          <div\n            style={{\n              alignItems: \"stretch\",\n              display: \"flex\",\n              height: \"100vh\",\n            }}\n          >\n            <Flow key={project.id} />\n            <Project />\n          </div>\n        </ContextMenu>\n      </ReactFlowProvider>\n    </Audio>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}