{"version":3,"sources":["worklets/adsr-processor.worklet.ts","worklets/and-gate-processor.worklet.ts","worklets/comparator-processor.worklet.ts","worklets/envelope-follower.worklet.ts","worklets/gate-processor.worklet.ts","worklets/meter-processor.worklet.ts","worklets/noise-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/quantizer-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/sample-and-hold-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContextContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/FlowContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","hooks/nodes/useAudioWorkletNode.tsx","worklets/adsr-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","hooks/useImmediateUpdateEffect.ts","hooks/nodes/useAnalyserNode.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","hooks/nodes/useBiquadFilterNode.tsx","components/nodes/BiquadFilter.tsx","hooks/nodes/useChannelMergerNode.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","hooks/nodes/useChannelSplitterNode.tsx","components/nodes/ChannelSplitter.tsx","hooks/nodes/useWaveShaperNode.tsx","components/nodes/Clipper.tsx","components/nodes/Comparator.tsx","hooks/nodes/useConstantSourceNode.tsx","components/nodes/ConstantSource.tsx","hooks/nodes/useDelayNode.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","hooks/nodes/useGainNode.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","hooks/nodes/useDestinationNode.tsx","components/nodes/Destination.tsx","hooks/nodes/useDynamicsCompressorNode.tsx","components/nodes/DynamicsCompressor.tsx","worklets/envelope-follower.types.ts","components/nodes/EnvelopeFollower.tsx","components/nodes/Equalizer.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/Note.tsx","components/nodes/Keyboard.tsx","components/nodes/Meter.tsx","utils/scale.ts","components/nodes/Metronome.tsx","worklets/noise-processor.types.ts","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","hooks/nodes/useOscillatorNode.tsx","components/nodes/Oscillator.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","components/nodes/Quantizer.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","worklets/aubio-processor.types.ts","components/nodes/Aubio.tsx","utils/getMedia.js","components/nodes/AudioDeviceSource.tsx","worklets/sample-and-hold-processor.types.ts","components/nodes/SampleAndHold.tsx","components/nodes/Sign.tsx","hooks/nodes/useStereoPannerNode.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","utils/collections.ts","utils/functions.ts","hooks/useKeyPress.ts","components/controls/NumericStepper.tsx","components/nodes/Vocoder/BandStrip.tsx","components/nodes/Vocoder/Vocoder.tsx","components/nodes/WaveShaper.tsx","components/nodes/Wled.tsx","components/nodes/XorGate.tsx","components/nodes/XYPad.tsx","components/nodes/RawGain.tsx","components/Flow.tsx","logo.svg","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContextContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","AudioContext","useEffect","awaitAudioWorkletProcessors","a","audioWorklet","Promise","all","addModule","ADSRWorkletProcessor","AndGateWorkletProcessor","ComparatorWorkletProcessor","EnvelopeFollowerWorkletProcessor","GateWorkletProcessor","MeterWorkletProcessor","NoiseWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","QuantizerWorkletProcessor","RectifierWorkletProcessor","SampleAndHoldWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","items","label","FlowContextMenu","addNode","className","map","item","subitem","memo","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","AudioWorkletNode","port","postMessage","Nodes","nodes","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","props","elements","onChangeElementFactory","setElements","contextMenu","find","log","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","Position","Left","Right","useAudioWorkletNode","Mode","Parameters","Stage","name","options","processorOptions","ADSR","selected","attackTime","decayTime","mode","Linear","releaseTime","sustainLevel","sustainOn","workletNode","AttackTime","parameters","get","DecayTime","ReleaseTime","SustainLevel","Exponential","Logarithmic","checked","min","step","max","useAnimationFrame","callback","active","cb","lastTickMs","requestId","updateLastTick","Date","now","requestFrame","requestAnimationFrame","tick","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","borderRadius","marginBottom","useImmediateUpdateEffect","effect","deps","tearDown","useWillUnmount","effectResult","Function","useAnalyserNode","fftSizeExp","createAnalyser","fftSize","Math","pow","Analyser","nodeType","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","kind","getAsFile","onDragOver","onDrop","useBiquadFilterNode","detune","frequency","gain","Q","createBiquadFilter","filtersUsingGain","filtersUsingQ","BiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","includes","canUseQ","disabled","useChannelMergerNode","createChannelMerger","channelCounts","ChannelMerger","Array","fill","channel","alignItems","flexDirection","Object","keys","channelCount","useChannelSplitterNode","createChannelSplitter","ChannelSplitter","numberOfOutputs","useWaveShaperNode","curve","oversample","createWaveShaper","Clipper","Comparator","useConstantSourceNode","offset","createConstantSource","ConstantSource","useDelayNode","delayTime","maxDelayTime","createDelay","clampDelayTime","Delay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","useGainNode","instant","setTargetAtTime","currentTime","dbToFloat32","float32toDb","abs","DelayEffect","feedback","mix","inputNode","outputNode","dryNode","cos","PI","wetNode","delayNode","feedbackNode","toFixed","useDestinationNode","destination","Destination","devices","setDevices","navigator","mediaDevices","enumerateDevices","then","dev","d","catch","err","message","useDynamicsCompressorNode","attack","knee","ratio","release","threshold","createDynamicsCompressor","DynamicsCompressor","ParameterDefaults","EnvelopeFollower","workletId","BANDS_OCTAVES","FILTER_BANDS","FILTER_GAINS","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filterNodes","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","inputANode","inputBNode","toggleInput","A","B","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","detailed","split","accidental","frequencyDetuned","keysOptions","Keyboard","gateNode","frequencyNode","setNote","noteFrequency","playNote","stopNote","gate","key","onMouseLeave","keyIndex","keyTwelfth","keyOctave","keyClassName","onMouseEnter","DPI_RATIO","window","devicePixelRatio","drawMeter","levels","setTransform","font","textBaseline","save","clearRect","restore","MAX_LEVEL","significant","rulerHeight","rulerWidth","levelText","groupY","lineX","WIDTH","textY","fillText","groupX","level","levelIndex","t","decibels","hue","lightness","Meter","levelsRef","channels","setChannels","canvasWidth","handleMessage","payload","onmessage","slice","BUCKETS","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","Noise","White","Pink","Brown","NotGate","OrGate","useOscillatorNode","createOscillator","Oscillator","OscillatorNote","OutputSwitch","outputANode","outputBNode","toggleOutput","Rectifier","HalfWave","FullWave","Aubio","OnSet","Bpm","Pitch","getMedia","clientDevice","getUserMedia","audio","deviceId","exact","video","AudioDeviceSource","s","setClientDevice","setLabel","stream","createMediaStreamSource","getTracks","track","close","location","reload","SampleAndHold","HoldTime","Sign","useStereoPannerNode","pan","createStereoPanner","StereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","generate","generateZip","generator","b","noop","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","addEventListener","removeEventListener","NumericStepper","largeStep","standardStep","smallStep","isLargeStep","isSmallStep","roundToFixed","num","round","BandStrip","filterDesc","bandStyle","onGainChange","onQChange","gainHandler","valueAsNumber","hz","freqColor","gainDb","q","FFT_SIZE_EXP","log2","BIN_COUNT","FFT_SIZE","MAX_HZ","Vocoder","modInputNode","modAnalyser","carrierInputNode","modConfig","setModConfig","setPaused","modFilterBank","gainNode","envelopeFollower","parameterData","responsesByBand","Map","freqs","from","bandResponse","magResponse","phaseResponse","gainAdjustedMagResponse","mag","set","carrierFilterBank","filter1","filter2","analyser","acc","entries","carrier","modulation","freqResponseCanvasRef","bandResponses","toLog","minLog","maxLog","getX","hzLog","responseUnitHeight","bandHz","responseColor","BAND_COLORS","alpha","rgb","string","gradient","createLinearGradient","addColorStop","lineStarted","minY","frequencyCount","carrierBandBins","carrierAnalyserCanvasRef","getFrequencyData","filtersFrequencies","freqBins","bandBins","binRangeStart","binRangeEnd","ceil","binRangeLength","hzStepPerBin","binHzStart","unclippedHeight","freqRange","subarray","drawBinsAsLine","WaveShaper","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","updateCurve","flexWrap","rows","Wled","substring","XorGate","XYPad","setLineDash","drawAxes","xNode","yNode","setXY","gateOn","gateOff","onMouseMove","rect","getXY","cursor","RawGain","nodeTypes","Quantizer","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","tryingToConnect","setTryingToConnect","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnectStart","onConnectStop","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","handleType","defaultPosition","defaultZoom","onlyRenderVisibleElements","selectNodesOnDrag","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","topbarStyles","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","hash","JSON","parse","history","replaceState","document","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","backgroundImage","logo","marginRight","App","property","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a16f08e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"25f83a8184c7a4f4d712.worklet.js\";","module.exports = __webpack_public_path__ + \"264005fc3fbac0df3cbb.worklet.js\";","module.exports = __webpack_public_path__ + \"7dba029d86b844d8016f.worklet.js\";","module.exports = __webpack_public_path__ + \"2e77cfc056b8fa914a0f.worklet.js\";","module.exports = __webpack_public_path__ + \"4ed615d1f9dca87c6212.worklet.js\";","module.exports = __webpack_public_path__ + \"897bbdcfb2b44a667a76.worklet.js\";","module.exports = __webpack_public_path__ + \"facaf7919522ba0e40ad.worklet.js\";","module.exports = __webpack_public_path__ + \"cadd6a708e4d2b9947b3.worklet.js\";","module.exports = __webpack_public_path__ + \"8db703de13a376294788.worklet.js\";","module.exports = __webpack_public_path__ + \"f9fe33625e24ee0c7feb.worklet.js\";","module.exports = __webpack_public_path__ + \"2f4ffd4dc2da4be65819.worklet.js\";","module.exports = __webpack_public_path__ + \"3775d4dc70be610cb423.worklet.js\";","module.exports = __webpack_public_path__ + \"8576755c7f889213a206.worklet.js\";","module.exports = __webpack_public_path__ + \"fbff70cf744eb55f2ea0.worklet.js\";","module.exports = __webpack_public_path__ + \"be6edbc3442b64609e81.worklet.js\";","import { createContext, useContext } from \"react\";\nimport * as sac from \"standardized-audio-context\";\n\nexport const AudioContextContext = createContext<sac.AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContextContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\nimport { AudioContext } from \"utils/audioContext\";\n\nimport ADSRWorkletProcessor from \"worklet-loader!worklets/adsr-processor.worklet.ts\";\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport ComparatorWorkletProcessor from \"worklet-loader!worklets/comparator-processor.worklet.ts\";\nimport EnvelopeFollowerWorkletProcessor from \"worklet-loader!worklets/envelope-follower.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport MeterWorkletProcessor from \"worklet-loader!worklets/meter-processor.worklet.ts\";\nimport NoiseWorkletProcessor from \"worklet-loader!worklets/noise-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport QuantizerWorkletProcessor from \"worklet-loader!worklets/quantizer-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport SampleAndHoldWorkletProcessor from \"worklet-loader!worklets/sample-and-hold-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      return new AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      if (!context.audioWorklet) {\n        return;\n      }\n\n      await Promise.all([\n        context.audioWorklet.addModule(ADSRWorkletProcessor),\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(ComparatorWorkletProcessor),\n        context.audioWorklet.addModule(EnvelopeFollowerWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(MeterWorkletProcessor),\n        context.audioWorklet.addModule(NoiseWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(QuantizerWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SampleAndHoldWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContextContext.Provider value={context}>{children}</AudioContextContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, {\n    placement: \"bottom-start\",\n  });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 } as DOMRect;\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div\n        ref={node => node && setPopperElement(node)}\n        style={styles.popper}\n        {...attributes.popper}\n      >\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nconst items = [\n  {\n    items: [\n      { label: \"Audio Buffer Source\", node: \"AudioBufferSource\" },\n      { label: \"Gate\", node: \"Gate\" },\n      { label: \"Keyboard\", node: \"Keyboard\" },\n      { label: \"Metronome\", node: \"Metronome\" },\n      { label: \"Noise\", node: \"Noise\" },\n      { label: \"Oscillator\", node: \"Oscillator\" },\n      { label: \"Oscillator Note\", node: \"OscillatorNote\" },\n      { label: \"AudioDevice\", node: \"AudioDeviceSource\" },\n    ],\n    label: \"Sources\",\n  },\n  {\n    items: [\n      { label: \"AudioDevice\", node: \"Destination\" },\n      { label: \"WLED\", node: \"Wled\" },\n    ],\n    label: \"Destinations\",\n  },\n  {\n    items: [\n      { label: \"Biquad Filter\", node: \"BiquadFilter\" },\n      { label: \"Channel Merger\", node: \"ChannelMerger\" },\n      { label: \"Channel Splitter\", node: \"ChannelSplitter\" },\n      { label: \"Clipper\", node: \"Clipper\" },\n      { label: \"Delay\", node: \"Delay\" },\n      { label: \"Delay Effect\", node: \"DelayEffect\" },\n      { label: \"Dynamics Compressor\", node: \"DynamicsCompressor\" },\n      { label: \"Equalizer\", node: \"Equalizer\" },\n      { label: \"Gain\", node: \"Gain\" },\n      { label: \"Quantizer\", node: \"Quantizer\" },\n      { label: \"Raw Gain\", node: \"RawGain\" },\n      { label: \"Rectifier\", node: \"Rectifier\" },\n      { label: \"Sample and Hold\", node: \"SampleAndHold\" },\n      { label: \"Sign\", node: \"Sign\" },\n      { label: \"Stereo Panner\", node: \"StereoPanner\" },\n      { label: \"Transformer\", node: \"Transformer\" },\n      { label: \"Vocoder\", node: \"Vocoder\" },\n      { label: \"Wave Shaper\", node: \"WaveShaper\" },\n    ],\n    label: \"Effects\",\n  },\n  {\n    items: [\n      { label: \"ADSR\", node: \"ADSR\" },\n      { label: \"Constant Source\", node: \"ConstantSource\" },\n      { label: \"Envelope Follower\", node: \"EnvelopeFollower\" },\n      { label: \"Input Switch\", node: \"InputSwitch\" },\n      { label: \"Output Switch\", node: \"OutputSwitch\" },\n      { label: \"XY Pad\", node: \"XYPad\" },\n    ],\n    label: \"Controllers\",\n  },\n  {\n    items: [\n      { label: \"AND Gate\", node: \"AndGate\" },\n      { label: \"Comparator\", node: \"Comparator\" },\n      { label: \"NOT Gate\", node: \"NotGate\" },\n      { label: \"OR Gate\", node: \"OrGate\" },\n      { label: \"XOR Gate\", node: \"XorGate\" },\n    ],\n    label: \"Logic\",\n  },\n  {\n    items: [\n      { label: \"Analyser\", node: \"Analyser\" },\n      { label: \"Meter\", node: \"Meter\" },\n      { label: \"Aubio\", node: \"Aubio\" },\n    ],\n    label: \"Analysers\",\n  },\n];\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      {items.map(item => (\n        <li key={item.label}>\n          {item.label}\n          <span>&#x276F;</span>\n          {item.items && (\n            <ul className=\"contextMenu sub\">\n              {item.items.map(subitem => (\n                <li key={subitem.label} onClick={() => addNode(subitem.node)}>\n                  {subitem.label}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useMemo, useRef } from \"react\";\nimport {\n  AnyAudioNode,\n  NodeContext,\n  NodeContextType,\n  isComplexAudioNode,\n} from \"context/NodeContext\";\nimport { AudioWorkletNode } from \"utils/audioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n\n    if (node instanceof AudioWorkletNode!) {\n      node.port.postMessage(\"stop\");\n    }\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (\n    !connection.source ||\n    !connection.target ||\n    !connection.sourceHandle ||\n    !connection.targetHandle\n  ) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback(\n    (connection: Edge | Connection) => connectNodes(connection, getNode),\n    [getNode]\n  );\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { AudioContext, AudioNode } from \"utils/audioContext\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\n\nexport type ComplexAudioNode<\n  Input extends AudioNode | undefined,\n  Output extends AudioNode | undefined\n> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<\n  Input extends AudioNode | undefined,\n  Output extends AudioNode | undefined\n> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(\n  node: AnyAudioNode\n): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(\n  id: string,\n  nodeFactory: NodeFactory<T>,\n  dependencies?: DependencyList\n): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContextContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  console.log(id)\n  const handleStyle = useMemo(\n    () => ({\n      // background: '#0dbedc',\n      background: `#0dbed${id.substr(-1)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({\n        width: 0,\n        height: 0,\n        top: event.clientY,\n        right: 0,\n        bottom: 0,\n        left: event.clientX,\n      } as DOMRect);\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" onClick={onClick} onContextMenu={onContextMenu} {...props}>\n      <div title={id} className=\"customNode_header\">\n        {title ?? type}\n      </div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import { DependencyList } from \"react\";\nimport { useNode } from \"context/NodeContext\";\nimport { AudioWorkletNode, IAudioWorkletNodeOptions } from \"utils/audioContext\";\n\nfunction useAudioWorkletNode(\n  id: string,\n  name: string,\n  options?: Partial<IAudioWorkletNodeOptions>,\n  dependencies?: DependencyList\n) {\n  return useNode(\n    id,\n    context => {\n      return new AudioWorkletNode!(context, name, {\n        ...options,\n        processorOptions: {\n          ...options?.processorOptions,\n          id,\n        },\n      });\n    },\n    dependencies\n  );\n}\n\nexport default useAudioWorkletNode;\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { AudioContext, AudioWorkletNode } from \"utils/audioContext\";\nimport { Mode, Parameters } from \"worklets/adsr-processor.types\";\n\ninterface ADSRNode extends Required<ComplexAudioNode<undefined, undefined>> {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.DecayTime]: AudioParam;\n  gain: AudioWorkletNode<AudioContext>;\n  gate: AudioWorkletNode<AudioContext>;\n  [Parameters.ReleaseTime]: AudioParam;\n  [Parameters.SustainLevel]: AudioParam;\n}\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const {\n    attackTime = 0.2,\n    decayTime = 0.1,\n    mode = Mode.Linear,\n    onChange,\n    releaseTime = 0.6,\n    sustainLevel = 0.7,\n    sustainOn = true,\n  } = data;\n\n  const workletNode = useAudioWorkletNode(\n    id,\n    \"adsr-processor\",\n    {\n      processorOptions: { sustainOn, mode },\n    },\n    [mode, sustainOn]\n  );\n\n  // AudioNode\n  const node = (useNode(\n    id,\n    () => ({\n      [Parameters.AttackTime]: workletNode.parameters.get(Parameters.AttackTime),\n      [Parameters.DecayTime]: workletNode.parameters.get(Parameters.DecayTime),\n      gain: workletNode,\n      gate: workletNode,\n      input: undefined,\n      output: undefined,\n      [Parameters.ReleaseTime]: workletNode.parameters.get(Parameters.ReleaseTime),\n      [Parameters.SustainLevel]: workletNode.parameters.get(Parameters.SustainLevel),\n    }),\n    [mode, sustainOn]\n  ) as unknown) as ADSRNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attackTime), [node, attackTime]);\n  useEffect(() => void (node[Parameters.DecayTime].value = decayTime), [node, decayTime]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = releaseTime), [node, releaseTime]);\n  useEffect(() => void (node[Parameters.SustainLevel].value = sustainLevel), [node, sustainLevel]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"50%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useEffect, useRef } from \"react\";\n\nexport default function useAnimationFrame(\n  callback: (elapsedMs: number) => void,\n  active: boolean\n): void {\n  const cb = useRef<(elapsedMs: number) => void>();\n\n  // TODO: This feels wrong\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    let lastTickMs: number;\n    const updateLastTick = () => {\n      lastTickMs = lastTickMs || Date.now();\n      return Date.now() - lastTickMs;\n    };\n\n    let requestId: number;\n    const requestFrame = () => (requestId = requestAnimationFrame(tick));\n\n    const tick = () => {\n      requestFrame();\n      cb.current && cb.current(updateLastTick());\n    };\n\n    if (active) {\n      updateLastTick();\n      requestFrame();\n      return () => cancelAnimationFrame(requestId);\n    }\n  }, [active]);\n}\n","import { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport React, { useCallback, useRef } from \"react\";\nimport { AnalyserNode } from \"utils/audioContext\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#000014\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#0dbedc\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#000014\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#0000c8\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    getData();\n    draw();\n  }, [draw, getData]);\n\n  useAnimationFrame(tick, !paused);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{ display: \"block\", borderRadius: 5, marginBottom: 5 }}\n      {...canvasProps}\n    />\n  );\n}\n\nexport default React.memo(Visualiser);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport useWillUnmount from \"@restart/hooks/useWillUnmount\";\nimport { DependencyList, EffectCallback, useMemo, useRef } from \"react\";\n\n/**\n * This behaves identically to @restart's useImmediateUpdateEffect, but will\n * also call its callback upon creation.\n */\nexport default function useImmediateUpdateEffect(effect: EffectCallback, deps: DependencyList) {\n  const tearDown = useRef<ReturnType<EffectCallback>>();\n\n  useWillUnmount(() => {\n    if (tearDown.current) tearDown.current();\n  });\n\n  useMemo(() => {\n    if (tearDown.current) tearDown.current();\n    const effectResult = effect();\n    tearDown.current = effectResult instanceof Function ? effectResult : undefined;\n  }, deps);\n}\n","import { useNode } from \"context/NodeContext\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\n\ninterface Options {\n  fftSizeExp?: number;\n}\n\nfunction useAnalyserNode(id: string, { fftSizeExp = 11 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return node;\n}\n\nexport default useAnalyserNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\nimport useAnalyserNode from \"hooks/nodes/useAnalyserNode\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n  const node = useAnalyserNode(id, { fftSizeExp });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"and-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { AudioBufferSourceNode } from \"utils/audioContext\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>▶</button>\n          <button onClick={stop}>◽</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input\n                  checked={loop}\n                  onChange={() => onChange({ loop: !loop })}\n                  title=\"Loop\"\n                  type=\"checkbox\"\n                />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import { useNode } from \"context/NodeContext\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { TBiquadFilterType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  gain?: number;\n  Q?: number;\n  type?: TBiquadFilterType;\n}\n\nfunction useBiquadFilterNode(\n  id: string,\n  { detune = 0, frequency = 350, gain = 0, Q = 1, type = \"lowpass\" }: Options\n) {\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.detune.value = detune), [node, detune]);\n  useImmediateUpdateEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useImmediateUpdateEffect(() => void (node.gain.value = gain), [node, gain]);\n  useImmediateUpdateEffect(() => void (node.Q.value = Q), [node, Q]);\n  useImmediateUpdateEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useBiquadFilterNode;\n","import React, { useEffect, useRef } from 'react';\nimport { NodeProps } from 'react-flow-renderer';\nimport Node from 'components/Node';\nimport useBiquadFilterNode from 'hooks/nodes/useBiquadFilterNode';\nimport { BiquadFilterNode, TBiquadFilterType } from 'utils/audioContext';\n\nconst filtersUsingGain: TBiquadFilterType[] = [\n  'lowshelf',\n  'highshelf',\n  'peaking',\n];\nconst filtersUsingQ: TBiquadFilterType[] = [\n  'lowpass',\n  'highpass',\n  'bandpass',\n  'peaking',\n  'notch',\n  'allpass',\n];\n\nfunction drawFrequencyResponse(\n  context: CanvasRenderingContext2D,\n  data: Float32Array,\n  node: BiquadFilterNode\n) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = '#000014';\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = '#ffffff77';\n  context.beginPath();\n  context.moveTo(\n    (node.frequency.value / (node.context.sampleRate / 2)) * width,\n    0\n  );\n  context.lineTo(\n    (node.frequency.value / (node.context.sampleRate / 2)) * width,\n    height\n  );\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = '#0000c8';\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const {\n    detune = 0,\n    gain = 0,\n    frequency = 350,\n    Q = 1,\n    onChange,\n    type = 'lowpass',\n  } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const node = useBiquadFilterNode(id, { detune, frequency, gain, Q, type });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext('2d');\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map(\n      (_, i) => i * 100\n    );\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = filtersUsingGain.includes(type);\n  const canUseQ = filtersUsingQ.includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={['input', 'detune', 'frequency', 'gain', 'Q']}\n      outputs={['output']}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n            <input\n              type=\"number\"\n              value={frequency}\n              onChange={e => onChange({ frequency: +e.target.value })}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={['lowpass', 'highpass'].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={['lowpass', 'highpass'].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n            <input\n              type=\"number\"\n              value={Q}\n              onChange={e => onChange({ Q: +e.target.value })}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              value={type}\n            >\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","import { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  inputs?: number;\n}\n\nfunction useChannelMergerNode(id: string, { inputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n}\n\nexport default useChannelMergerNode;\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelMergerNode from \"hooks/nodes/useChannelMergerNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n  const node = useChannelMergerNode(id, { inputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  outputs?: number;\n}\n\nfunction useChannelSplitterNode(id: string, { outputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n}\n\nexport default useChannelSplitterNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelSplitterNode from \"hooks/nodes/useChannelSplitterNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n  const node = useChannelSplitterNode(id, { outputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\nimport { TOverSampleType } from \"utils/audioContext\";\n\ninterface Options {\n  curve?: Float32Array | null;\n  oversample?: TOverSampleType;\n}\n\nfunction useWaveShaperNode(id: string, { curve = null, oversample = \"none\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createWaveShaper());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.curve = curve), [node, curve]);\n  useImmediateUpdateEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  return node;\n}\n\nexport default useWaveShaperNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\nconst curve = new Float32Array([-1, 1]);\n\nfunction Clipper({ id, type }: NodeProps) {\n  // AudioNode\n  useWaveShaperNode(id, { curve });\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type} />;\n}\n\nexport default React.memo(Clipper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Comparator({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"comparator-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Comparator\" type={type} />;\n}\n\nexport default React.memo(Comparator);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  offset?: number;\n}\n\nfunction useConstantSourceNode(id: string, { offset = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useImmediateUpdateEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.offset.value = offset), [node, offset]);\n\n  return node;\n}\n\nexport default useConstantSourceNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n  useConstantSourceNode(id, { offset });\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  delayTime?: number;\n  maxDelayTime?: number;\n}\n\nfunction useDelayNode(id: string, { delayTime = 1, maxDelayTime = 1 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(maxDelayTime), [maxDelayTime]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return node;\n}\n\nexport default useDelayNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n  const node = useDelayNode(id, { delayTime, maxDelayTime });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import { useNode } from \"context/NodeContext\";\nimport useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\n\ninterface Options {\n  gain?: number;\n  instant?: boolean;\n}\n\nfunction useGainNode(id: string, { gain = 1, instant = false }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => {\n    if (instant) {\n      node.gain.value = gain;\n    } else {\n      node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n    }\n  }, [node, gain, instant]);\n\n  return node;\n}\n\nexport default useGainNode;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Mixing\n  const dryNode = useGainNode(`${id}_dry`, { gain: Math.cos(mix * 0.5 * Math.PI) });\n  const wetNode = useGainNode(`${id}_wet`, { gain: Math.cos((1.0 - mix) * 0.5 * Math.PI) });\n  // Delay\n  const delayNode = useDelayNode(`${id}_delay`, { delayTime });\n  // Feedback\n  const feedbackNode = useGainNode(`${id}_feedback`, { gain: feedback });\n\n  // Dry chain\n  useEffect(() => {\n    inputNode.connect(dryNode);\n    dryNode.connect(outputNode);\n  }, [dryNode, inputNode, outputNode]);\n  // Wet chain\n  useEffect(() => {\n    inputNode.connect(delayNode);\n    delayNode.connect(wetNode);\n    wetNode.connect(outputNode);\n  }, [delayNode, inputNode, outputNode, wetNode]);\n  // Feedback chain\n  useEffect(() => {\n    wetNode.connect(feedbackNode);\n    feedbackNode.connect(delayNode);\n  }, [delayNode, feedbackNode, wetNode]);\n\n  // AudioNode\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import { useNode } from \"context/NodeContext\";\n\nfunction useDestinationNode(id: string) {\n  // AudioNode\n  return useNode(id, context => context.destination);\n}\n\nexport default useDestinationNode;\n","import React, { useEffect, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDestinationNode from \"hooks/nodes/useDestinationNode\";\n\nfunction Destination({ id, type, selected }: NodeProps) {\n  useDestinationNode(id);\n  const [devices, setDevices] = useState<Array<any>>([]);\n  useEffect(() => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log(\"enumerateDevices() not supported.\");\n      return;\n    }\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (dev) {\n        dev.length && setDevices(dev.filter(d => d.kind === \"audiooutput\"));\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  }, []);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} type={type} title={`Destination: Audio Device`}>\n      {selected && devices.length > 0 && (\n        <select>{devices && devices.map(d => <option>{d.label}</option>)}</select>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Destination);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  attack?: number;\n  knee?: number;\n  ratio?: number;\n  release?: number;\n  threshold?: number;\n}\n\nfunction useDynamicsCompressorNode(\n  id: string,\n  { attack = 0.003, knee = 30, ratio = 12, release = 0.25, threshold = -24 }: Options\n) {\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useImmediateUpdateEffect(() => void (node.knee.value = knee), [node, knee]);\n  useImmediateUpdateEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useImmediateUpdateEffect(() => void (node.attack.value = attack), [node, attack]);\n  useImmediateUpdateEffect(() => void (node.release.value = release), [node, release]);\n\n  return node;\n}\n\nexport default useDynamicsCompressorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDynamicsCompressorNode from \"hooks/nodes/useDynamicsCompressorNode\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n  useDynamicsCompressorNode(id, { attack, knee, ratio, release, threshold });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","export enum Parameters {\n  /**\n   * Defines how fast the envelope goes up, defined in seconds.\n   */\n  AttackTime = \"attack\",\n  /**\n   * Defines how fast the envelope goes down, defined in seconds.\n   */\n  ReleaseTime = \"release\",\n}\n\nexport const ParameterDefaults: Readonly<Record<Parameters, number>> = {\n  [Parameters.AttackTime]: 0.0002,\n  [Parameters.ReleaseTime]: 0.0004,\n};\n","import Node from \"components/Node\";\nimport { useNode } from \"context/NodeContext\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ParameterDefaults, Parameters } from \"worklets/envelope-follower.types\";\n\ninterface EnvelopeFollowerNode {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.ReleaseTime]: AudioParam;\n}\n\nfunction EnvelopeFollower({ id, type, data, selected }: NodeProps) {\n  const { attack = ParameterDefaults.attack, release = ParameterDefaults.release, onChange } = data;\n\n  const workletId = `worklet_${id}`;\n  const workletNode = useAudioWorkletNode(workletId, \"envelope-follower\");\n  const node = useNode(\n    id,\n    () => ({\n      [Parameters.AttackTime]: workletNode.parameters.get(Parameters.AttackTime),\n      [Parameters.ReleaseTime]: workletNode.parameters.get(Parameters.ReleaseTime),\n      input: workletNode,\n      output: workletNode,\n    }),\n    [workletNode]\n  ) as EnvelopeFollowerNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attack), [node, attack]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", Parameters.AttackTime, Parameters.ReleaseTime]}\n      outputs={[\"output\"]}\n      title=\"Envelope Follower\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={0}\n              onChange={e => onChange({ [Parameters.AttackTime]: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={0}\n              onChange={e => onChange({ [Parameters.ReleaseTime]: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(EnvelopeFollower);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { AudioNode } from \"utils/audioContext\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\nconst FILTER_BANDS = BANDS_OCTAVES;\nconst FILTER_GAINS = Array(BANDS_OCTAVES.length).fill(0);\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n  return `${frequency}`;\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = FILTER_GAINS, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n\n  const filterNodes = FILTER_BANDS.map((frequency, index, frequencies) => {\n    const isLowShelf = index === 0;\n    const isHighShelf = index === frequencies.length - 1;\n    const isBandPass = !isLowShelf && !isHighShelf;\n\n    const gain = isBandPass ? gains[index] : 0;\n    const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n    const Q = octaveBandwidthToQ(bandwidth);\n\n    // While illegal by rules of hooks, the bands array is never changed in runtime so hook call order is preserved\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useBiquadFilterNode(`${id}_filter_${frequency}`, { frequency, gain, type, Q });\n  });\n\n  useEffect(\n    () => {\n      (filterNodes as AudioNode[])\n        .concat(outputNode)\n        .reduce((source, destination) => source.connect(destination), inputNode);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [inputNode, outputNode, ...filterNodes]\n  );\n\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  // AudioParam;\n  useEffect(() => {\n    filterNodes.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, gains]);\n  useEffect(() => {\n    filterNodes.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {filterNodes.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2) || 0} dB`;\n  useGainNode(id, { gain });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useConstantSourceNode(id, {});\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // Interface\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Inputs\n  const inputANode = useGainNode(`${id}_inputA`, {});\n  const inputBNode = useGainNode(`${id}_inputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputANode.connect(outputNode);\n    inputBNode.connect(outputNode);\n  }, [inputANode, inputBNode, outputNode]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n  useEffect(() => {\n    if (input === \"A\") {\n      inputANode.gain.setTargetAtTime(1, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(0, inputBNode.context.currentTime, 0.015);\n    } else {\n      inputANode.gain.setTargetAtTime(0, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(1, inputBNode.context.currentTime, 0.015);\n    }\n  }, [input, inputANode, inputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: undefined,\n      A: inputANode,\n      B: inputBNode,\n      output: outputNode,\n    }),\n    [inputANode, inputBNode, outputNode]\n  );\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Twelfth must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detailed?: boolean;\n  detune?: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"0.7em\",\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detailed = false, detune = 0, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      {detailed && (\n        <>\n          &nbsp;\n          <small>\n            ({frequency.toFixed(2)} Hz\n            {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n          </small>\n        </>\n      )}\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useCallback } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Note from \"components/Note\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keysOptions = [16, 28, 40, 64, 88];\nconst keyTwelfthOffset = -3;\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { keys = 16, octave = 2, onChange } = data;\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const frequencyNode = useConstantSourceNode(`${id}_frequency`, {});\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = frequencyNode;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      frequencyNode.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [frequencyNode]\n  );\n  const playNote = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const stopNote = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // const isLargeStep = useKeyPress(1);\n\n  function onKeyDown({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    switch (key) {\n      case \"a\":\n        setNote(1,9)        \n        playNote()\n        break;\n      case \"w\":\n        setNote(1,10)        \n        playNote()\n        break;\n      case \"s\":\n        setNote(1,11)        \n        playNote()\n        break;\n      case \"d\":\n        setNote(2,0)        \n        playNote()\n        break;\n      case \"r\":\n        setNote(2,1)        \n        playNote()\n        break;\n      case \"f\":\n        setNote(2,2)        \n        playNote()\n        break;\n      case \"t\":\n        setNote(2,3)        \n        playNote()\n        break;\n      case \"g\":\n        setNote(2,4)        \n        playNote()\n        break;\n      case \"h\":\n        setNote(2,5)        \n        playNote()\n        break;\n      case \"u\":\n        setNote(2,6)        \n        playNote()\n        break;\n      case \"j\":\n        setNote(2,7)        \n        playNote()\n        break;\n      case \"i\":\n        setNote(2,8)        \n        playNote()\n        break;\n      case \"k\":\n        setNote(2,9)        \n        playNote()\n        break;\n      case \"o\":\n        setNote(2,10)        \n        playNote()\n        break;\n      case \"l\":\n        setNote(2,11)        \n        playNote()\n        break;\n      case \"ö\":\n        setNote(3,0)        \n        playNote()\n        break;    \n      default:\n        break;\n    }\n  }\n  function onKeyUp({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    stopNote()\n  }\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      frequency: frequencyNode,\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n    }),\n    [frequencyNode, gateNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onKeyDown={onKeyDown} onKeyUp={onKeyUp} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            {Array(keys)\n              .fill(null)\n              .map((_, keyIndex) => {\n                const keyTwelfth = (((keyIndex + keyTwelfthOffset) % 12) + 12) % 12;\n                const keyOctave = octave + Math.floor((keyIndex + keyTwelfthOffset) / 12);\n                const keyClassName = [1, 3, 6, 8, 10].includes(keyTwelfth) ? keyBlack : keyWhite;\n                console.log(keyOctave, keyTwelfth)\n                return (\n                  <button\n                    className={keyClassName}\n                    key={`${keyOctave}_${keyTwelfth}`}\n                    onMouseEnter={() => setNote(keyOctave, keyTwelfth)}\n                  >\n                    <Note octave={keyOctave} twelfth={keyTwelfth} />\n                  </button>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n          <select\n            onChange={e => onChange({ keys: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Keys\"\n            value={keys}\n          >\n            {keysOptions.map(keys => (\n              <option key={keys} value={keys}>\n                {keys}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { logarithmic } from \"utils/scale\";\nimport { float32toDb } from \"utils/units\";\n\nconst MAX_LEVEL = 6;\nconst MIN_LEVEL = -48;\nconst BUCKETS = MAX_LEVEL - MIN_LEVEL + 1;\nconst DPI_RATIO = window.devicePixelRatio ?? 1;\nconst LEVEL_GAP = 2;\nconst HEIGHT = 2;\nconst WIDTH = 25;\n\nfunction drawMeter(context: CanvasRenderingContext2D, levels: number[]) {\n  // high dpi\n  context.setTransform(DPI_RATIO, 0, 0, DPI_RATIO, 0, 0);\n\n  // reset\n  context.fillStyle = \"#000000\";\n  context.font = \"10px Arial\";\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  context.restore();\n\n  // rulers\n  Array(BUCKETS)\n    .fill(undefined)\n    .forEach((_, item) => {\n      const significant = [0, 6, 12, 18, 30, 42, 54].includes(item);\n      const rulerHeight = significant ? 1 : 0.5;\n      const rulerWidth = significant ? 6 : 3;\n      const levelText = `${MAX_LEVEL - item}`;\n      const groupX = 0;\n      const groupY = item * HEIGHT + 5.5;\n      const lineX = WIDTH - 8 + (significant ? 0 : 3);\n      const lineY = 0;\n      const textX = groupX + 15;\n      const textY = groupY;\n\n      if (significant) {\n        context.fillText(levelText, textX, textY);\n      }\n\n      context.lineWidth = rulerHeight;\n      context.fillRect(groupX + lineX, groupY + lineY, rulerWidth, rulerHeight);\n    });\n\n  // levels\n  levels.forEach((level, levelIndex) => {\n    Array(BUCKETS)\n      .fill(undefined)\n      .forEach((_, item) => {\n        const decibels = MAX_LEVEL - item;\n        const hue = Math.min(\n          Math.max(120 * logarithmic(Math.max(0, -decibels / 10)), 0),\n          120\n        ).toFixed(0);\n        const lightness = float32toDb(level) >= decibels ? \"50%\" : \"0%\";\n\n        context.fillStyle = `hsl(${hue}, 50%, ${lightness})`;\n        context.fillRect(\n          (levelIndex + 1) * (WIDTH + LEVEL_GAP) - LEVEL_GAP,\n          item * HEIGHT + 5,\n          WIDTH,\n          HEIGHT\n        );\n      });\n  });\n}\n\ntype ChannelMessageEvent = MessageEvent<{\n  payload: { channels: number; id: string };\n  type: \"channels\";\n}>;\ntype LevelMessageEvent = MessageEvent<{\n  payload: { channel: number; id: string; level: number };\n  type: \"level\";\n}>;\n\n// TODO add peak hold\nfunction Meter({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const levelsRef = useRef<number[]>([]);\n  const [channels, setChannels] = useState(1);\n\n  const canvasHeight = BUCKETS * HEIGHT + 10;\n  const canvasWidth = (WIDTH + LEVEL_GAP) * (channels + 1);\n\n  const node = useAudioWorkletNode(id, \"meter-processor\", { numberOfOutputs: 0 });\n\n  const handleMessage = useCallback(\n    ({ data: event }: ChannelMessageEvent | LevelMessageEvent) => {\n      if (event.type === \"channels\") {\n        if (event.payload.channels !== channels) {\n          setChannels(event.payload.channels);\n        }\n      }\n\n      if (event.type === \"level\") {\n        levelsRef.current[event.payload.channel] = event.payload.level;\n      }\n    },\n    [channels]\n  );\n  useEffect(() => {\n    node.port.onmessage = handleMessage;\n  }, [node, handleMessage]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawMeter(context, levelsRef.current.slice(0, channels));\n  }, [channels]);\n\n  useAnimationFrame(tick, true);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} title=\"Meter\" type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            width={DPI_RATIO * canvasWidth}\n            height={DPI_RATIO * canvasHeight}\n            style={{ height: canvasHeight, width: canvasWidth }}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Meter);\n","export function exponential(t: number): number {\n  return (Math.pow(10, t) - 1) / 9;\n}\n\nexport function linear(t: number): number {\n  return t;\n}\n\nexport function logarithmic(t: number): number {\n  return Math.log10(1 + t * 9);\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#00d\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","export enum NoiseType {\n  Brown = \"Brown\",\n  Pink = \"Pink\",\n  White = \"White\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { NoiseType } from \"worklets/noise-processor.types\";\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n  useAudioWorkletNode(id, \"noise-processor\", { numberOfInputs: 0, processorOptions: { type } }, [type]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType.White}</option>\n              <option value={NoiseType.Pink}>{NoiseType.Pink}</option>\n              <option value={NoiseType.Brown}>{NoiseType.Brown}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"not-gate-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"or-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\nimport { useEffect } from \"react\";\nimport { TOscillatorType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  type?: TOscillatorType;\n}\n\nfunction useOscillatorNode(id: string, { detune = 0, frequency = 440, type = \"sine\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.detune.value = detune), [node, detune]);\n  useImmediateUpdateEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useImmediateUpdateEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useOscillatorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detailed detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  // Outputs\n  const outputANode = useGainNode(`${id}_outputA`, {});\n  const outputBNode = useGainNode(`${id}_outputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputNode.connect(outputANode);\n    inputNode.connect(outputBNode);\n  }, [inputNode, outputANode, outputBNode]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n  useEffect(() => {\n    if (output === \"A\") {\n      outputANode.gain.setTargetAtTime(1, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(0, outputBNode.context.currentTime, 0.015);\n    } else {\n      outputANode.gain.setTargetAtTime(0, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(1, outputBNode.context.currentTime, 0.015);\n    }\n  }, [output, outputANode, outputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: inputNode,\n      A: outputANode,\n      B: outputBNode,\n      output: undefined,\n    }),\n    [inputNode, outputANode, outputBNode]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange } = data;\n  useAudioWorkletNode(id, \"quantizer-processor\", { processorOptions: { levels, max, min } }, [levels, max, min]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Quantizer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n  useAudioWorkletNode(id, \"rectifier-processor\", { processorOptions: { mode } }, [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  OnSet = \"OnSet\",\n  Bpm = \"Bpm\",\n  Pitch = \"Pitch\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Mode } from \"worklets/aubio-processor.types\";\n\nfunction Aubio({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange, mode = Mode.OnSet } = data;\n  useAudioWorkletNode(id, \"quantizer-processor\", { processorOptions: { levels, max, min } }, [\n    levels,\n    max,\n    min,\n  ]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={[\"output\", mode]}\n      title={`Aubio: ${mode}`}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <select\n              style={{ width: \"100%\" }}\n              onChange={e => onChange({ mode: e.target.value })}\n              title=\"Type\"\n              value={mode}\n            >\n              <option value={Mode.OnSet}>{Mode.OnSet}</option>\n              <option value={Mode.Bpm}>{Mode.Bpm}</option>\n              <option value={Mode.Pitch}>{Mode.Pitch}</option>\n            </select>\n          </div>\n          {/* <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div> */}\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Aubio);\n","/* eslint-disable no-unused-expressions */\nexport const getMedia = async clientDevice => {\n  try {\n    return await navigator.mediaDevices.getUserMedia({\n      audio: clientDevice === null ? true : { deviceId: { exact: clientDevice.deviceId } },\n      video: false,\n    });\n  } catch (err) {\n    console.log(\"Error:\", err);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport { useNode } from \"context/NodeContext\";\nimport { getMedia } from \"../../utils/getMedia\";\n// import { AudioBufferSourceNode } from \"utils/audioContext\";\n\nfunction AudioDeviceSource({ id, type, selected }: NodeProps) {\n  // const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  const [devices, setDevices] = useState<Array<any>>([]);\n  const [clientDevice, setClientDevice] = useState(null);\n  const [label, setLabel] = useState();\n  const node = useNode(id, context => context.createGain());\n\n  let s: any;\n\n  const play = () => {\n    console.log(clientDevice);\n    getMedia(clientDevice).then((stream: any) => {\n      s = stream;\n      const source = node.context.createMediaStreamSource(stream);\n      source.connect(node);\n    });\n  };\n  const stop = () => {\n    if (node.context) {\n      s.getTracks().forEach((track: any) => track.stop());\n      node.context.close();\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    if (clientDevice) {\n      setLabel(clientDevice[\"label\"]);\n    }\n  }, [clientDevice]);\n\n  useEffect(() => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log(\"enumerateDevices() not supported.\");\n      return;\n    }\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (dev) {\n        dev.length && setDevices(dev.filter(d => d.kind === \"audioinput\"));\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  }, []);\n\n  console.log(devices);\n  return (\n    <Node id={id} outputs={[\"output\"]} type={type} title={`Source: AudioDevice`}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={() => play()}>▶</button>\n          <button onClick={() => stop()}>◽</button>\n        </div>\n      </div>\n      {selected && devices.length > 0 && (\n        <select\n          value={label}\n          onChange={e => setClientDevice(devices.find(d => d.label === e.target.value))}\n        >\n          {devices && devices.map((d, i) => <option key={i}>{d.label}</option>)}\n        </select>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(AudioDeviceSource);\n","export enum Parameters {\n  HoldTime = \"holdTime\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Parameters } from \"worklets/sample-and-hold-processor.types\";\n\nfunction SampleAndHold({ id, type }: NodeProps) {\n  const workletNode = useAudioWorkletNode(`${id}_worklet`, \"sample-and-hold-processor\");\n\n  useNode(\n    id,\n    () => ({\n      [Parameters.HoldTime]: workletNode.parameters.get(Parameters.HoldTime),\n      input: workletNode,\n      output: workletNode,\n    }),\n    [workletNode]\n  );\n\n  return <Node id={id} inputs={[\"input\", Parameters.HoldTime]} outputs={[\"output\"]} title=\"Sample/Hold\" type={type} />;\n}\n\nexport default React.memo(SampleAndHold);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Sign({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"sign-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import useImmediateUpdateEffect from \"hooks/useImmediateUpdateEffect\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  pan?: number;\n}\n\nfunction useStereoPannerNode(id: string, { pan = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useImmediateUpdateEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return node;\n}\n\nexport default useStereoPannerNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useStereoPannerNode from \"hooks/nodes/useStereoPannerNode\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n  useStereoPannerNode(id, { pan });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n  useAudioWorkletNode(\n    id,\n    \"transformer-processor\",\n    {\n      processorOptions: {\n        inputMin,\n        inputMax,\n        outputMin,\n        outputMax,\n      },\n    },\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","export function* generate<T>(length: number, generator: (index: number) => T): Generator<T> {\n  for (let i = 0; i < length; i++) {\n    yield generator(i);\n  }\n}\n\nexport function generateArray<T>(length: number, generator: (index: number) => T): Array<T> {\n  return Array.from(generate(length, generator));\n}\n\nexport function first<T>(collection: ArrayLike<T>): T | undefined {\n  return collection.length ? collection[0] : undefined;\n}\n\nexport function last<T>(collection: ArrayLike<T>): T | undefined {\n  return collection.length ? collection[collection.length - 1] : undefined;\n}\n\nexport function* generateZip<A, B>(a: A[], b: B[]): Generator<[A, B]> {\n  const length = Math.min(a.length, b.length);\n  for (let index = 0; index < length; index++) {\n    yield [a[index], b[index]];\n  }\n}\n\nexport function zip<A, B>(a: A[], b: B[]): [A, B][] {\n  return Array.from(generateZip(a, b));\n}\n","export function noop() {}\n","import { useCallback, useEffect, useState } from \"react\";\n\n/**\n * @param targetKey The `KeyEvent.key` to match.\n * @returns `true` if the key is pressed, or false otherwise.\n */\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n  const downHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    },\n    [targetKey]\n  );\n\n  const upHandler = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey]\n  );\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [downHandler, upHandler]);\n  return keyPressed;\n}\n","import { useKeyPress } from \"hooks/useKeyPress\";\nimport React from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  largeStep?: number;\n  standardStep?: number;\n  smallStep?: number;\n  value: number;\n}\n\nconst LARGE_STEP_MODIFIER_KEY = \"Shift\";\nconst SMALL_STEP_MODIFIER_KEY = \"Alt\";\n\nfunction NumericStepper({\n  onChange,\n  value,\n  largeStep = 10,\n  standardStep = 1,\n  smallStep = 0.1,\n  ...props\n}: Props) {\n  const isLargeStep = useKeyPress(LARGE_STEP_MODIFIER_KEY);\n  const isSmallStep = useKeyPress(SMALL_STEP_MODIFIER_KEY);\n  const step = isLargeStep ? largeStep : isSmallStep ? smallStep : standardStep;\n\n  function onKeyDown({ key }: React.KeyboardEvent<HTMLInputElement>) {\n    if (key === \"ArrowUp\") {\n      onChange(roundToFixed(value + step));\n    } else if (key === \"ArrowDown\") {\n      onChange(roundToFixed(value - step));\n    }\n\n    function roundToFixed(num: number) {\n      return Math.round(num * 10) / 10;\n    }\n  }\n\n  return (\n    <input\n      {...props}\n      type=\"number\"\n      // Step is handled via JS, because Alt+DownArrow isn't picked up by the\n      // input on Mac.\n      step=\"0\"\n      onKeyDown={onKeyDown}\n      onChange={event => onChange(+event.target.value)}\n      value={value}\n    />\n  );\n}\n\nexport default NumericStepper;\n","import NumericStepper from \"components/controls/NumericStepper\";\nimport React, { useCallback } from \"react\";\nimport { dbToFloat32, float32toDb } from \"utils/units\";\nimport { BandStyle, FilterDescription } from \"./types\";\n\ntype GainChangeHandler = (gain: number) => void;\ntype QChangeHandler = (q: number) => void;\n\ninterface Props {\n  bandStyle: BandStyle;\n  filterDesc: FilterDescription;\n  onGainChange: GainChangeHandler;\n  onQChange: QChangeHandler;\n}\n\nexport function BandStrip({ filterDesc, bandStyle, onGainChange, onQChange }: Props) {\n  const gainHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onGainChange(float32toDb(e.target.valueAsNumber));\n    },\n    [onGainChange]\n  );\n\n  return (\n    <div className=\"vocoderNode_bandStrip\">\n      <div className=\"centerHz\">{filterDesc.hz}</div>\n      <div className=\"colorSwatch\" style={{ background: bandStyle.freqColor }}></div>\n      <input\n        type=\"range\"\n        onChange={gainHandler}\n        value={dbToFloat32(filterDesc.gainDb)}\n        max={3}\n        min={0.0001}\n        step={0.001}\n      />\n      <NumericStepper value={filterDesc.q} min={0} max={60} onChange={onQChange} />\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport Node from \"components/Node\";\nimport { nodeCleanup } from \"components/Nodes\";\nimport { useNode } from \"context/NodeContext\";\nimport useAnalyserNode from \"hooks/nodes/useAnalyserNode\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport produce from \"immer\";\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { generate, generateArray, zip } from \"utils/collections\";\nimport { noop } from \"utils/functions\";\nimport { dbToFloat32 } from \"utils/units\";\nimport { Parameters } from \"worklets/envelope-follower.types\";\nimport { BandStrip } from \"./BandStrip\";\nimport color from \"color\";\nimport { BandResponse, BandStyle, FilterDescription } from \"./types\";\nimport \"./Vocoder.css\";\n\nconst FFT_SIZE = 1024;\nconst FFT_SIZE_EXP = Math.log2(FFT_SIZE);\nconst BIN_COUNT = FFT_SIZE / 2;\n\nconst RESPONSE_STEPS = 240;\nconst MIN_HZ = 0;\nconst MAX_HZ = 4000;\n\nconst FILTER_BANDS: FilterDescription[] = [\n  { hz: 101, type: \"lowpass\", gainDb: -2.55, q: 0.55 },\n  { hz: 154, type: \"bandpass\", gainDb: -2.4, q: 2.96 },\n  { hz: 208, type: \"bandpass\", gainDb: -2.4, q: 4 },\n  { hz: 285, type: \"bandpass\", gainDb: -3, q: 3.55 },\n  { hz: 395, type: \"bandpass\", gainDb: -2.5, q: 3.7 },\n  { hz: 542, type: \"bandpass\", gainDb: -3.12, q: 3.75 },\n  { hz: 720, type: \"bandpass\", gainDb: -2.8, q: 3.7 },\n  { hz: 1013, type: \"bandpass\", gainDb: -2.8, q: 3.9 },\n  { hz: 1495, type: \"bandpass\", gainDb: -3.4, q: 3.2 },\n  { hz: 2001, type: \"bandpass\", gainDb: -3.15, q: 5.16 },\n  { hz: 2546, type: \"bandpass\", gainDb: -2.8, q: 4.48 },\n  { hz: 3030, type: \"highpass\", gainDb: -2, q: 0.88 },\n];\n\nexport function Vocoder({ id, type }: NodeProps) {\n  // Input/output nodes\n  const modInputNode = useGainNode(`${id}_modulate`, {});\n  const modAnalyser = useAnalyserNode(`${id}_modulate_analyser`, { fftSizeExp: FFT_SIZE_EXP });\n  const carrierInputNode = useGainNode(`${id}_carrier`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n\n  // Modulator bank configuration\n  const [modConfig, setModConfig] = useState(produce(FILTER_BANDS, noop));\n\n  // Whether the graph is connected to its inputs\n  const [paused, setPaused] = useState(false);\n\n  // The number of samples per second\n  const sampleRate = modInputNode.context.sampleRate;\n\n  // Construct the nodes that make up the modulator's filter bank\n  const modFilterBank = modConfig.map(({ hz, type, gainDb, q }) => {\n    // While illegal by rules of hooks, the bands array is never rearranged in\n    // runtime so hook call order is preserved\n    const gainNode = useGainNode(`${id}_modulate_gain_${hz}`, {\n      gain: dbToFloat32(gainDb),\n      instant: true,\n    });\n\n    const biquadNode = useBiquadFilterNode(`${id}_modulate_filter1_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n\n    const envelopeFollower = useAudioWorkletNode(\n      `${id}_modulate_envelope_${hz}`,\n      \"envelope-follower\",\n      {\n        parameterData: {\n          [Parameters.AttackTime]: 0,\n          [Parameters.ReleaseTime]: 0.0003,\n        },\n      }\n    );\n\n    return {\n      filter: biquadNode,\n      gain: gainNode,\n      envelopeFollower: envelopeFollower,\n    };\n  });\n\n  // Calculate filter responses\n  const responsesByBand = new Map<number, BandResponse>();\n  const stepCount = RESPONSE_STEPS;\n  const stepSize = (MAX_HZ - MIN_HZ) / stepCount;\n  const freqs = Float32Array.from(generate(stepCount, i => i * stepSize + MIN_HZ));\n\n  for (let i = 0; i < modConfig.length; i++) {\n    const bandResponse = useMemo(() => {\n      const { filter, gain } = modFilterBank[i];\n\n      const magResponse = new Float32Array(freqs.length);\n      const phaseResponse = new Float32Array(freqs.length);\n\n      filter.getFrequencyResponse(freqs, magResponse, phaseResponse);\n      const gainAdjustedMagResponse = magResponse.map(mag => mag * gain.gain.value);\n\n      return {\n        frequencies: freqs,\n        magResponse: gainAdjustedMagResponse,\n        phaseResponse,\n      };\n    }, [modConfig[i]]);\n\n    responsesByBand.set(modConfig[i].hz, bandResponse);\n  }\n\n  const carrierFilterBank = modConfig.map(({ hz, type, q }) => {\n    // While illegal by rules of hooks, the bands array is never changed in\n    // runtime so hook call order is preserved\n    const filterNode1 = useBiquadFilterNode(`${id}_carrier_filter1_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n    const filterNode2 = useBiquadFilterNode(`${id}_carrier_filter2_${hz}`, {\n      frequency: hz,\n      gain: 0,\n      type,\n      Q: q,\n    });\n\n    const gainNode = useGainNode(`${id}_carrier_gain_${hz}`, {\n      gain: 0,\n      instant: true,\n    });\n\n    const analyserNode = useAnalyserNode(`${id}_carrier_analyser_${hz}`, {\n      fftSizeExp: FFT_SIZE_EXP,\n    });\n\n    return {\n      filter1: filterNode1,\n      filter2: filterNode2,\n      gain: gainNode,\n      analyser: analyserNode,\n    };\n  });\n\n  useEffect(\n    () => {\n      modInputNode.connect(modAnalyser);\n\n      for (const { gain, filter, envelopeFollower } of modFilterBank) {\n        // Connect up the chain\n        const binModulatorNodes = [filter, gain, envelopeFollower];\n        binModulatorNodes.reduce((acc, node) => {\n          return acc ? (node ? acc.connect(node) : acc) : node;\n        });\n      }\n\n      for (const [i, { filter1, filter2, gain, analyser }] of carrierFilterBank.entries()) {\n        const binCarrierNodes = [filter1, filter2, gain, analyser];\n\n        // Connect up the chain\n        binCarrierNodes.reduce((acc, node) => {\n          return !!acc ? (node ? acc.connect(node) : acc) : node;\n        });\n\n        // Modulate the carrier gain from the equivalent modulation node\n        modFilterBank[i].envelopeFollower.connect(gain.gain);\n\n        // And connect the carrier to the output\n        gain.connect(outputNode);\n      }\n    },\n    // We use a constant, because there's no reason for this to change at runtime,\n    // and spreading out all the nodes into a list seems so wasteful.\n    [outputNode]\n  );\n\n  // Connect or disconnect from input when `active` changes\n  useEffect(() => {\n    for (const { filter } of modFilterBank) {\n      // Connect to the modulator\n      if (paused) modInputNode.disconnect(filter);\n      else modInputNode.connect(filter);\n    }\n\n    for (const { filter1 } of carrierFilterBank) {\n      // Connect the carrier to the chain\n      if (paused) carrierInputNode.disconnect(filter1);\n      else carrierInputNode.connect(filter1);\n    }\n  }, [paused]);\n\n  useNode(\n    id,\n    () => ({\n      carrier: carrierInputNode,\n      modulation: modInputNode,\n      input: undefined,\n      output: outputNode,\n      stop() {},\n      disconnect() {\n        nodeCleanup(carrierInputNode);\n        nodeCleanup(modInputNode);\n        nodeCleanup(outputNode);\n      },\n    }),\n    [carrierInputNode, modInputNode, outputNode]\n  );\n\n  // Draw frequency response changes\n  const freqResponseCanvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = freqResponseCanvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawFrequencyResponse(context, responsesByBand, { min: MIN_HZ, max: MAX_HZ });\n  }, [responsesByBand]);\n\n  const carrierBandBins = useRef([] as { frequency: number; freqBins: Uint8Array }[]);\n  const carrierAnalyserCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const getFrequencyData = useCallback(() => {\n    const filtersFrequencies = generateArray(FILTER_BANDS.length, i => {\n      const freqBins = new Uint8Array(BIN_COUNT);\n      const analyserNode = carrierFilterBank[i].analyser!;\n      analyserNode.getByteFrequencyData(freqBins);\n      return { frequency: FILTER_BANDS[i].hz, freqBins };\n    });\n\n    carrierBandBins.current = filtersFrequencies;\n    return sampleRate;\n  }, [sampleRate, ...carrierFilterBank]);\n\n  const draw = useCallback((sampleRate: number) => {\n    const canvas = carrierAnalyserCanvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawBinsAsLine(context, carrierBandBins.current, {\n      sampleRate: sampleRate,\n      min: MIN_HZ,\n      max: MAX_HZ,\n    });\n  }, []);\n\n  const tick = useCallback(() => {\n    const sampleRate = getFrequencyData();\n    draw(sampleRate);\n  }, [draw, getFrequencyData]);\n\n  useAnimationFrame(tick, !paused);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"carrier\", \"modulation\"]}\n      outputs={[\"output\"]}\n      title=\"Vocoder\"\n      type={type}\n    >\n      <div className=\"vocoderNode_canvasHost\">\n        <canvas\n          ref={carrierAnalyserCanvasRef}\n          style={{ display: \"block\", width: 800, height: 400 }}\n          width=\"600\"\n          height=\"300\"\n        />\n        <canvas\n          ref={freqResponseCanvasRef}\n          className=\"vocoderNode_overlayCanvas\"\n          width=\"800\"\n          height=\"400\"\n        />\n        <button className=\"vocoderNode_overlayPause\" onClick={() => setPaused(!paused)}>\n          {paused ? \"Run\" : \"Pause\"}\n        </button>\n      </div>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"vocoderNode_bandStrips\">\n          {modConfig.map((filterDesc, i) => {\n            const gainHandler = (gainDb: number) =>\n              setModConfig(\n                produce(modConfig, draft => {\n                  draft[i].gainDb = gainDb;\n                })\n              );\n            const qHandler = (q: number) =>\n              setModConfig(\n                produce(modConfig, draft => {\n                  draft[i].q = q;\n                })\n              );\n            return (\n              <BandStrip\n                key={filterDesc.hz}\n                filterDesc={filterDesc}\n                bandStyle={BAND_COLORS[i]}\n                onGainChange={gainHandler}\n                onQChange={qHandler}\n              ></BandStrip>\n            );\n          })}\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nfunction drawFrequencyResponse(\n  context: CanvasRenderingContext2D,\n  bandResponses: Map<number, BandResponse>,\n  { min, max }: { min: number; max: number }\n) {\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  const toLog = (value: number) => (value === 0 ? 0 : Math.log10(value / 100));\n  const minLog = toLog(min);\n  const maxLog = toLog(max);\n  const getX = (hz: number) => {\n    const hzLog = toLog(hz);\n    return width * ((hzLog - minLog) / (maxLog - minLog));\n  };\n\n  context.clearRect(0, 0, width, height);\n\n  const responseUnitHeight = height / 3;\n\n  // Then draw the response lines on top\n  for (const [i, { hz: bandHz }] of FILTER_BANDS.entries()) {\n    const { frequencies, magResponse } = bandResponses.get(bandHz)!;\n    const { responseColor } = BAND_COLORS[i]!;\n\n    context.strokeStyle = color(responseColor).alpha(0.26).rgb().string();\n    context.lineWidth = 2;\n\n    const gradient = context.createLinearGradient(0, height, 0, 0);\n    gradient.addColorStop(0, color(responseColor).alpha(0.15).rgb().string());\n    gradient.addColorStop(0.2, color(responseColor).alpha(0.1).rgb().string());\n    gradient.addColorStop(1, color(responseColor).alpha(0.01).rgb().string());\n\n    let lineStarted = false;\n    let x: number = 0;\n    let minY: number = height;\n\n    const frequencyCount = magResponse.length;\n    for (let i = 0; i < frequencyCount; i++) {\n      const hz = frequencies[i];\n      x = getX(hz);\n      const y = height - responseUnitHeight * magResponse[i];\n      minY = Math.min(y, minY);\n\n      if (!lineStarted) {\n        context.beginPath();\n        context.moveTo(x, y);\n        lineStarted = true;\n      } else {\n        context.lineTo(x, y);\n      }\n    }\n\n    context.stroke();\n    context.lineTo(x, height);\n    context.lineTo(0, height);\n    context.closePath();\n    context.fillStyle = gradient;\n\n    context.fill();\n  }\n}\n\n// function drawBins(\n//   context: CanvasRenderingContext2D,\n//   bandBins: { frequency: number; freqBins: Uint8Array }[],\n//   {\n//     min,\n//     max,\n//     sampleRate,\n//   }: {\n//     min: number;\n//     max: number;\n//     sampleRate: number;\n//   }\n// ) {\n//   const height = context.canvas.height;\n//   const width = context.canvas.width;\n\n//   context.clearRect(0, 0, width, height);\n\n//   if (!bandBins.length) {\n//     return;\n//   } else if (bandBins.length > BAND_COLORS.length) {\n//     console.error(\"Not enough frequency colors\");\n//     return;\n//   }\n\n//   const bandwidth = sampleRate / 2;\n//   const binRangeStart = Math.floor(BIN_COUNT * (min / bandwidth));\n//   const binRangeEnd = Math.ceil(BIN_COUNT * (max / bandwidth));\n//   const binRangeLength = binRangeEnd - binRangeStart;\n\n//   const binBarWidth = width / binRangeLength;\n//   const unclippedHeight = height - 60;\n//   const cumulativeHeightsPerBin = generateArray(binRangeLength, () => 0);\n\n//   // Draw the frequency bins for this passband\n//   for (const [i, { freqBins }] of bandBins.entries()) {\n//     const { freqColor } = BAND_COLORS[i]!;\n//     context.fillStyle = freqColor;\n\n//     let x = 0; // Reset x\n//     const freqRange = freqBins.subarray(binRangeStart, binRangeEnd);\n//     for (let i = 0; i < binRangeLength; i++) {\n//       const barHeight = unclippedHeight * (freqRange[i] / 255.0);\n//       const y = height - barHeight - cumulativeHeightsPerBin[i];\n//       context.fillRect(x, y, binBarWidth, barHeight);\n\n//       x += binBarWidth;\n//       cumulativeHeightsPerBin[i] += barHeight;\n//     }\n//   }\n// }\n\nfunction drawBinsAsLine(\n  context: CanvasRenderingContext2D,\n  bandBins: { frequency: number; freqBins: Uint8Array }[],\n  {\n    min,\n    max,\n    sampleRate,\n  }: {\n    min: number;\n    max: number;\n    sampleRate: number;\n  }\n) {\n  if (!bandBins.length) {\n    return;\n  } else if (bandBins.length > BAND_COLORS.length) {\n    console.error(\"Not enough frequency colors\");\n    return;\n  }\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  const toLog = (value: number) => (value === 0 ? 0 : Math.log10(value / 100));\n  const minLog = toLog(min);\n  const maxLog = toLog(max);\n  const getX = (hz: number) => {\n    const hzLog = toLog(hz);\n    return width * ((hzLog - minLog) / (maxLog - minLog));\n  };\n\n  context.clearRect(0, 0, width, height);\n\n  const bandwidth = sampleRate / 2;\n\n  const binRangeStart = Math.floor(BIN_COUNT * (min / bandwidth));\n  const binRangeEnd = Math.ceil(BIN_COUNT * (max / bandwidth));\n  const binRangeLength = binRangeEnd - binRangeStart;\n\n  const hzStepPerBin = bandwidth / BIN_COUNT;\n  const binHzStart = binRangeStart * hzStepPerBin;\n\n  const unclippedHeight = height - 60;\n\n  // Draw the frequency bins for this passband\n  for (const [i, { freqBins }] of bandBins.entries()) {\n    const { freqColor } = BAND_COLORS[i]!;\n    context.strokeStyle = freqColor;\n    context.lineWidth = 2;\n    context.beginPath();\n\n    let x = 0; // Reset x\n    let lineStarted = false;\n    const freqRange = freqBins.subarray(binRangeStart, binRangeEnd);\n    for (let i = 0; i < binRangeLength; i++) {\n      const hz = binHzStart + i * hzStepPerBin;\n      x = getX(hz);\n      const barHeight = unclippedHeight * (freqRange[i] / 255.0);\n      const y = height - barHeight;\n\n      if (!lineStarted) {\n        context.moveTo(x, y);\n        lineStarted = true;\n      } else {\n        context.lineTo(x, y);\n      }\n    }\n\n    context.stroke();\n  }\n}\n\nconst FREQ_COLORS = [\n  \"#fff566\",\n  \"#b37feb\",\n  \"#5cdbd3\",\n  \"#85a5ff\",\n  \"#ff85c0\",\n  \"#95de64\",\n  \"#ffd666\",\n  \"#ff7875\",\n  \"#ff9c6e\",\n  \"#ffc069\",\n  \"#d3f261\",\n  \"#69c0ff\",\n];\n\nconst FREQ_RESPONSE_COLORS = [\n  \"#ffec3d\",\n  \"#9254de\",\n  \"#36cfc9\",\n  \"#597ef7\",\n  \"#f759ab\",\n  \"#73d13d\",\n  \"#ffc53d\",\n  \"#ff4d4f\",\n  \"#ff7a45\",\n  \"#ffa940\",\n  \"#bae637\",\n  \"#40a9ff\",\n];\n\nconst BAND_COLORS: BandStyle[] = zip(FREQ_COLORS, FREQ_RESPONSE_COLORS).map(\n  ([freqColor, responseColor]) => ({\n    freqColor,\n    responseColor,\n  })\n);\n\nexport default React.memo(Vocoder);\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  const context = useContext(AudioContextContext);\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line no-new-func\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioNode\n  useWaveShaperNode(id, { curve, oversample });\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line no-new-func\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\n\nfunction Wled({ id, type, selected }: NodeProps) {\n  return (\n    <Node id={id} inputs={[\"input\"]} type={type} title={`WLED: ${id.substring(0, 11)}`}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input type=\"text\" title=\"Host\" />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Wled);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"xor-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction drawAxes(context: CanvasRenderingContext2D) {\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  context.clearRect(0, 0, width, height);\n  context.setLineDash([4, 4]);\n  context.fillStyle = \"#000000\";\n  context.font = \"20px monospace\";\n  context.lineWidth = 1;\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n\n  context.beginPath();\n  context.moveTo(30, height / 2);\n  context.lineTo(width - 30, height / 2);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width / 2, 15);\n  context.fillText(\"-1\", width / 2, height - 15);\n\n  context.beginPath();\n  context.moveTo(width / 2, 30);\n  context.lineTo(width / 2, height - 30);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width - 15, height / 2);\n  context.fillText(\"-1\", 15, height / 2);\n}\n\nfunction getXY(event: any) {\n  const canvas = event.target;\n  const rect = canvas.getBoundingClientRect();\n  const x = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2);\n  const y = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2);\n\n  return { x, y };\n}\n\nfunction XYPad({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawAxes(context);\n  }, []);\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const xNode = useConstantSourceNode(`${id}_x`, {});\n  const yNode = useConstantSourceNode(`${id}_y`, {});\n\n  const setXY = useCallback(\n    ({ x, y }: { x: number; y: number }) => {\n      xNode.offset.setTargetAtTime(x, xNode.context.currentTime, 0.015);\n      yNode.offset.setTargetAtTime(y, yNode.context.currentTime, 0.015);\n    },\n    [xNode, yNode]\n  );\n  const gateOn = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const gateOff = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n      x: xNode,\n      y: yNode,\n    }),\n    [gateNode, xNode, yNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"x\", \"y\", \"gate\"]} title={`XY Pad`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            height={400}\n            onMouseMove={event => setXY(getXY(event))}\n            style={{ background: \"white\", cursor: \"crosshair\", height: 200, width: 200 }}\n            width={400}\n            onMouseDown={gateOn}\n            onMouseUp={gateOff}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(XYPad);\n","import NumericStepper from \"components/controls/NumericStepper\";\nimport Node from \"components/Node\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\n\nfunction RawGain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange } = data;\n  const title = `Gain: ${gain.toFixed(2)}`;\n  useGainNode(id, { gain, instant: true });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <NumericStepper value={gain} onChange={gain => onChange({ gain })} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(RawGain);\n","import FlowContextMenu from \"components/FlowContextMenu\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport Clipper from \"components/nodes/Clipper\";\nimport Comparator from \"components/nodes/Comparator\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport EnvelopeFollower from \"components/nodes/EnvelopeFollower\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Meter from \"components/nodes/Meter\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Quantizer from \"components/nodes/Quantizer\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport Aubio from \"components/nodes/Aubio\";\nimport AudioDeviceSource from \"components/nodes/AudioDeviceSource\";\nimport SampleAndHold from \"components/nodes/SampleAndHold\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport Vocoder from \"components/nodes/Vocoder\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport Wled from \"components/nodes/Wled\";\nimport XorGate from \"components/nodes/XorGate\";\nimport XYPad from \"components/nodes/XYPad\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport produce from \"immer\";\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  isEdge,\n  isNode,\n  Node as ReactFlowNode,\n  OnConnectStartParams,\n  OnLoadParams as ReactFlowInstance,\n  removeElements,\n} from \"react-flow-renderer\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport RawGain from \"./nodes/RawGain\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  Aubio: Aubio,\n  AudioBufferSource: AudioBufferSource,\n  AudioDeviceSource: AudioDeviceSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  Clipper: Clipper,\n  Comparator: Comparator,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  EnvelopeFollower: EnvelopeFollower,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Meter: Meter,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Quantizer: Quantizer,\n  RawGain: RawGain,\n  Rectifier: Rectifier,\n  SampleAndHold: SampleAndHold,\n  Vocoder: Vocoder,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  Wled: Wled,\n  XorGate: XorGate,\n  XYPad: XYPad,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      // stroke: '#0dbedc',\n      stroke: `#0dbed${params.source.substr(-1)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(\n  initialElements: Elements,\n  audioNodes: Record<string, AnyAudioNode>\n) {\n  const nodesWithConnections = initialElements\n    .filter(isEdge)\n    .reduce<Record<string, boolean>>((nodeIds, edge) => {\n      nodeIds[edge.source] = true;\n      nodeIds[edge.target] = true;\n      return nodeIds;\n    }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n  const [tryingToConnect, setTryingToConnect] = useState<OnConnectStartParams | null>(null);\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnectStart = useCallback((e: React.MouseEvent, params: OnConnectStartParams) => {\n    setTryingToConnect(params);\n  }, []);\n  const onConnectStop = useCallback((e: MouseEvent) => setTryingToConnect(null), []);\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({\n        width: 0,\n        height: 0,\n        top: event.clientY,\n        right: 0,\n        bottom: 0,\n        left: event.clientX,\n      } as DOMRect);\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        data-connecting-handletype={tryingToConnect ? tryingToConnect.handleType : undefined}\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onConnectStart={onConnectStart}\n        onConnectStop={onConnectStop}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        selectNodesOnDrag={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","export default __webpack_public_path__ + \"static/media/logo.7b27df5c.svg\";","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\nimport logo from \"logo.svg\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: 80,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst topbarStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  height: 70,\n  backgroundColor: \"#0dbedc\",\n  backgroundSize: \"25%\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"-5% center\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.history.replaceState(\n      null,\n      document.title,\n      \"#\" +\n        btoa(\n          JSON.stringify({\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          })\n        )\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value ?? \"\");\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <>\n      <div style={{ ...topbarStyles, backgroundImage: `url(${logo})` }}></div>\n      <div style={drawerStyles}>\n        <textarea\n          onChange={onChange}\n          style={textareaStyles}\n          value={JSON.stringify(\n            {\n              elements: elements.map(element => ({ ...element, __rf: undefined })),\n              id,\n              transform,\n            },\n            null,\n            2\n          )}\n        />\n        <div style={controlsStyles}>\n          <button onClick={clearProject} style={{ marginRight: 10 }}>\n            clear\n          </button>\n          <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}